D G "__PCH__" 0 177 ""4.114""
D G "__DEVICE__" 0 177 "4550"
D G "__DATE__" 0 177 ""12-feb-15""
D G "__TIME__" 0 177 ""21:43:15"" "Este programa sirve para revisar la correcta conexión entre el PIC18F4550 y             //"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_D0" 1 52 "31768"
d G "PIN_D1" 1 53 "31769"
d G "PIN_D2" 1 54 "31770"
d G "PIN_D3" 1 55 "31771"
d G "PIN_D4" 1 56 "31772"
d G "PIN_D5" 1 57 "31773"
d G "PIN_D6" 1 58 "31774"
d G "PIN_D7" 1 59 "31775"
d G "PIN_E0" 1 61 "31776"
d G "PIN_E1" 1 62 "31777"
d G "PIN_E2" 1 63 "31778"
d G "PIN_E3" 1 64 "31779"
d G "PIN_E7" 1 65 "31783"
d G "FALSE" 1 68 "0"
d G "TRUE" 1 69 "1"
d G "BYTE" 1 71 "int8"
d G "BOOLEAN" 1 72 "int1"
d G "getc" 1 74 "getch"
d G "fgetc" 1 75 "getch"
d G "getchar" 1 76 "getch"
d G "putc" 1 77 "putchar"
d G "fputc" 1 78 "putchar"
d G "fgets" 1 79 "gets"
d G "fputs" 1 80 "puts"
d G "WDT_TIMEOUT" 1 86 "7"
d G "MCLR_FROM_SLEEP" 1 87 "11"
d G "MCLR_FROM_RUN" 1 88 "15"
d G "NORMAL_POWER_UP" 1 89 "12"
d G "BROWNOUT_RESTART" 1 90 "14"
d G "WDT_FROM_SLEEP" 1 91 "3"
d G "RESET_INSTRUCTION" 1 92 "0"
d G "SLEEP_FULL" 1 96 "0" "Default"
d G "SLEEP_IDLE" 1 97 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 1 105 "0"
d G "T0_EXT_L_TO_H" 1 106 "32"
d G "T0_EXT_H_TO_L" 1 107 "48"
d G "T0_DIV_1" 1 109 "8"
d G "T0_DIV_2" 1 110 "0"
d G "T0_DIV_4" 1 111 "1"
d G "T0_DIV_8" 1 112 "2"
d G "T0_DIV_16" 1 113 "3"
d G "T0_DIV_32" 1 114 "4"
d G "T0_DIV_64" 1 115 "5"
d G "T0_DIV_128" 1 116 "6"
d G "T0_DIV_256" 1 117 "7"
d G "T0_OFF" 1 119 "0x80"
d G "T0_8_BIT" 1 121 "0x40"
d G "RTCC_INTERNAL" 1 123 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 124 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 125 "48"
d G "RTCC_DIV_1" 1 126 "8"
d G "RTCC_DIV_2" 1 127 "0"
d G "RTCC_DIV_4" 1 128 "1"
d G "RTCC_DIV_8" 1 129 "2"
d G "RTCC_DIV_16" 1 130 "3"
d G "RTCC_DIV_32" 1 131 "4"
d G "RTCC_DIV_64" 1 132 "5"
d G "RTCC_DIV_128" 1 133 "6"
d G "RTCC_DIV_256" 1 134 "7"
d G "RTCC_OFF" 1 135 "0x80"
d G "RTCC_8_BIT" 1 136 "0x40"
d G "WDT_ON" 1 147 "0x100"
d G "WDT_OFF" 1 148 "0"
d G "T1_DISABLED" 1 154 "0"
d G "T1_INTERNAL" 1 155 "0x85"
d G "T1_EXTERNAL" 1 156 "0x87"
d G "T1_EXTERNAL_SYNC" 1 157 "0x83"
d G "T1_CLK_OUT" 1 159 "8"
d G "T1_DIV_BY_1" 1 161 "0"
d G "T1_DIV_BY_2" 1 162 "0x10"
d G "T1_DIV_BY_4" 1 163 "0x20"
d G "T1_DIV_BY_8" 1 164 "0x30"
d G "T2_DISABLED" 1 169 "0"
d G "T2_DIV_BY_1" 1 170 "4"
d G "T2_DIV_BY_4" 1 171 "5"
d G "T2_DIV_BY_16" 1 172 "6"
d G "T3_DISABLED" 1 178 "0"
d G "T3_INTERNAL" 1 179 "0x85"
d G "T3_EXTERNAL" 1 180 "0x87"
d G "T3_EXTERNAL_SYNC" 1 181 "0x83"
d G "T3_DIV_BY_1" 1 183 "0"
d G "T3_DIV_BY_2" 1 184 "0x10"
d G "T3_DIV_BY_4" 1 185 "0x20"
d G "T3_DIV_BY_8" 1 186 "0x30"
d G "CCP_OFF" 1 192 "0"
d G "CCP_CAPTURE_FE" 1 193 "4"
d G "CCP_CAPTURE_RE" 1 194 "5"
d G "CCP_CAPTURE_DIV_4" 1 195 "6"
d G "CCP_CAPTURE_DIV_16" 1 196 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 197 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 198 "9"
d G "CCP_COMPARE_INT" 1 199 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 200 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 201 "0xB"
d G "CCP_PWM" 1 202 "0xC"
d G "CCP_PWM_PLUS_1" 1 203 "0x1c"
d G "CCP_PWM_PLUS_2" 1 204 "0x2c"
d G "CCP_PWM_PLUS_3" 1 205 "0x3c"
d G "T3_CCP1_TO_2" 1 211 "0x48"
d G "T3_CCP2" 1 212 "0x8"
d G "CCP_PWM_H_H" 1 215 "0x0c"
d G "CCP_PWM_H_L" 1 216 "0x0d"
d G "CCP_PWM_L_H" 1 217 "0x0e"
d G "CCP_PWM_L_L" 1 218 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 220 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 221 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 222 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 224 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 225 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 226 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 227 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 228 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 229 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 230 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 232 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 233 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 234 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 236 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 237 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 238 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 240 "0x80000000"
d G "PSP_ENABLED" 1 250 "0x10"
d G "PSP_DISABLED" 1 251 "0"
d G "SPI_MASTER" 1 258 "0x20"
d G "SPI_SLAVE" 1 259 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 260 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 261 "0x00"
d G "SPI_CLK_DIV_4" 1 262 "0x00"
d G "SPI_CLK_DIV_16" 1 263 "0x01"
d G "SPI_CLK_DIV_64" 1 264 "0x02"
d G "SPI_CLK_T2" 1 265 "0x03"
d G "SPI_SS_DISABLED" 1 266 "0x01"
d G "SPI_XMIT_L_TO_H" 1 268 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 269 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 271 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 272 "0x8000"
d G "SPI_L_TO_H" 1 275 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 276 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 282 "2"
d G "UART_DATA" 1 283 "4"
d G "UART_AUTODETECT" 1 284 "8"
d G "UART_AUTODETECT_NOWAIT" 1 285 "9"
d G "UART_WAKEUP_ON_RDA" 1 286 "10"
d G "UART_SEND_BREAK" 1 287 "13"
d G "A0_A3_A1_A3" 1 291 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 292 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 293 "0xbcf05"
d G "NC_NC_NC_NC" 1 294 "0x0ff07"
d G "A0_A3_A1_A2" 1 295 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 296 "0x9ef01"
d G "A0_VR_A1_VR" 1 297 "0x3ff06"
d G "A3_VR_A2_VR" 1 298 "0xcff0e"
d G "CP1_INVERT" 1 299 "0x0000010"
d G "CP2_INVERT" 1 300 "0x0000020"
d G "VREF_LOW" 1 308 "0xa0"
d G "VREF_HIGH" 1 309 "0x80"
d G "VREF_F5" 1 311 "0x40"
d G "VREF_COMP" 1 312 "0x10"
d G "LVD_LVDIN" 1 317 "0x1F"
d G "LVD_45" 1 318 "0x1E"
d G "LVD_42" 1 319 "0x1D"
d G "LVD_40" 1 320 "0x1C"
d G "LVD_38" 1 321 "0x1B"
d G "LVD_36" 1 322 "0x1A"
d G "LVD_35" 1 323 "0x19"
d G "LVD_33" 1 324 "0x18"
d G "LVD_30" 1 325 "0x17"
d G "LVD_28" 1 326 "0x16"
d G "LVD_27" 1 327 "0x15"
d G "LVD_25" 1 328 "0x14"
d G "LVD_24" 1 329 "0x13"
d G "LVD_23" 1 330 "0x12"
d G "LVD_22" 1 331 "0x11"
d G "LVD_21" 1 332 "0x10"
d G "LVD_TRIGGER_BELOW" 1 334 "0"
d G "LVD_TRIGGER_ABOVE" 1 335 "0x80"
d G "OSC_31KHZ" 1 341 "0"
d G "OSC_125KHZ" 1 342 "0x10"
d G "OSC_250KHZ" 1 343 "0x20"
d G "OSC_500KHZ" 1 344 "0x30"
d G "OSC_1MHZ" 1 345 "0x40"
d G "OSC_2MHZ" 1 346 "0x50"
d G "OSC_4MHZ" 1 347 "0x60"
d G "OSC_8MHZ" 1 348 "0x70"
d G "OSC_16MHZ" 1 349 "0x4060"
d G "OSC_32MHZ" 1 350 "0x4070"
d G "OSC_TIMER1" 1 352 "1"
d G "OSC_INTRC" 1 353 "2"
d G "OSC_NORMAL" 1 354 "0"
d G "OSC_IDLE_MODE" 1 356 "0x80"
d G "OSC_31250" 1 357 "0x8000"
d G "OSC_PLL_ON" 1 358 "0x4000"
d G "OSC_PLL_OFF" 1 359 "0"
d G "OSC_STATE_STABLE" 1 363 "4"
d G "OSC_STATE_EXT_RUNNING" 1 364 "8"
d G "ADC_OFF" 1 371 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 372 "0x100"
d G "ADC_CLOCK_DIV_4" 1 373 "0x04"
d G "ADC_CLOCK_DIV_8" 1 374 "0x01"
d G "ADC_CLOCK_DIV_16" 1 375 "0x05"
d G "ADC_CLOCK_DIV_32" 1 376 "0x02"
d G "ADC_CLOCK_DIV_64" 1 377 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 378 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 382 "0x0F" "None"
d G "ALL_ANALOG" 1 383 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 384 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 385 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 386 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 387 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 388 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 389 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 390 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 391 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 392 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 393 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 394 "0x0D" "A0 A1"
d G "AN0" 1 395 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 396 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 397 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 398 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 399 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 400 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 401 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 402 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 403 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 404 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 405 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 406 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 407 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 410 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 411 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 412 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 413 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 416 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 417 "1"
d G "ADC_READ_ONLY" 1 418 "6"
d G "L_TO_H" 1 426 "0x40"
d G "H_TO_L" 1 427 "0"
d G "GLOBAL" 1 429 "0xF2C0"
d G "PERIPH" 1 430 "0xF240"
d G "INT_RTCC" 1 431 "0x00F220"
d G "INT_TIMER0" 1 432 "0x00F220"
d G "INT_TIMER1" 1 433 "0x009D01"
d G "INT_TIMER2" 1 434 "0x009D02"
d G "INT_TIMER3" 1 435 "0x00A002"
d G "INT_EXT_L2H" 1 436 "0x5000F210"
d G "INT_EXT_H2L" 1 437 "0x6000F210"
d G "INT_EXT" 1 438 "0x00F210"
d G "INT_EXT1_L2H" 1 439 "0x5001F008"
d G "INT_EXT1_H2L" 1 440 "0x6001F008"
d G "INT_EXT1" 1 441 "0x00F008"
d G "INT_EXT2_L2H" 1 442 "0x5002F010"
d G "INT_EXT2_H2L" 1 443 "0x6002F010"
d G "INT_EXT2" 1 444 "0x00F010"
d G "INT_RB" 1 445 "0x00FFF208"
d G "INT_AD" 1 446 "0x009D40"
d G "INT_RDA" 1 447 "0x009D20"
d G "INT_TBE" 1 448 "0x009D10"
d G "INT_SSP" 1 449 "0x009D08"
d G "INT_CCP1" 1 450 "0x009D04"
d G "INT_CCP2" 1 451 "0x00A001"
d G "INT_BUSCOL" 1 452 "0x00A008"
d G "INT_LOWVOLT" 1 453 "0x00A004"
d G "INT_COMP" 1 454 "0x00A040"
d G "INT_EEPROM" 1 455 "0x00A010"
d G "INT_OSCF" 1 456 "0x00A080"
d G "INT_SPP" 1 457 "0x009D80"
d G "INT_USB" 1 458 "0x00A020"
D G "ON" 0 13 "output_high"
D G "OFF" 0 14 "output_low"
D G "LedV" 0 16 "PIN_B4"
D G "LedR" 0 17 "PIN_B2"
D G "PIN_ENC_MAC_SO" 0 22 "PIN_C7" "Conectar con PIN MISO del ENC28J60."
D G "PIN_ENC_MAC_SI" 0 23 "PIN_B0" "Conectar con PIN MOSI del ENC28J60."
D G "PIN_ENC_MAC_CLK" 0 24 "PIN_B1" "Conectar con PIN SCK del ENC28J60."
D G "PIN_ENC_MAC_CS" 0 25 "PIN_B3" "Conectar con PIN CS del ENC28J60."
D G "PIN_ENC_MAC_RST" 0 26 "PIN_B5" "Conectar con PIN RST del ENC28J60."
D G "PIN_ENC_MAC_INT" 0 27 "PIN_D2" "Conectar con PIN INT del ENC28J60."
D G "PIN_ENC_MAC_WOL" 0 28 "PIN_D3" "Conectar con PIN WOL del ENC28J60."
D G "STACK_USE_MCPENC" 0 35 "TRUE"
D G "STACK_USE_ARP" 0 36 "TRUE"
D G "STACK_USE_ICMP" 0 37 "TRUE"
D G "STACK_USE_TCP" 0 38 "TRUE"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
D G "STACK_USE_FTP_SERVER" 2 63 "STACK_USE_FTP"
D G "STACK_INCLUDE" 2 65 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
D G "STACK_TSK_H" 3 49 ""
D G "OUTPUT_DRIVE_MACRO" 3 55 "(x) bit_clear(*(x/8+18),x%8)"
D G "OUTPUT_FLOAT_MACRO" 3 63 "(x) bit_set(*(x/8+18),x%8)"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
D G "COMPILER_H" 4 43 ""
C G "" 4 49 1 "*"
C G "" 4 111 1 "*"
C G "" 4 175 1 "*"
C G "" 4 238 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 2 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 2 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
D G "MPFS_START_POSITION" 3 107 "548"
D G "END_OF_MPFS_POINTER" 3 110 " (MPFS_START_POSITION)"
D G "MPFS_RESERVE_BLOCK" 3 111 " (END_OF_MPFS_POINTER+4)"
C G "" 3 113 1 "*"
C G "" 3 113 1 "*"
C G "" 3 113 1 "*"
C G "" 3 113 1 "*"
D G "STACK_USE_MAC" 3 121 "TRUE"
D G "STACK_USE_MCPINC" 3 129 "FALSE"
D G "STACK_USE_MAC" 3 135 "TRUE"
D G "STACK_USE_PPP" 3 146 "FALSE"
D G "STACK_USE_SLIP" 3 150 "FALSE"
D G "STACK_USE_DNS" 3 162 "FALSE"
D G "STACK_USE_DHCP" 3 166 "FALSE"
D G "STACK_USE_UDP" 3 170 "FALSE"
D G "STACK_USE_TELNET" 3 182 "FALSE"
D G "STACK_USE_HTTP" 3 186 "FALSE"
D G "STACK_USE_SMTP" 3 190 "FALSE"
D G "STACK_USE_SNMP" 3 194 "FALSE"
D G "STACK_USE_ANNOUNCE" 3 198 "FALSE"
D G "STACK_USE_IP_GLEANING" 3 210 "FALSE"
D G "STACK_USE_MPFS" 3 214 "FALSE"
D G "STACK_USE_HTTP2" 3 218 "FALSE"
D G "STACK_USE_FAT" 3 222 "FALSE"
D G "STACK_USE_FTP" 3 226 "FALSE"
D G "STACK_USE_TFTP" 3 230 "FALSE"
D G "STACK_USE_TEMP" 3 234 "FALSE"
C G "" 3 237 1 "*"
C G "" 3 245 1 "*"
C G "" 3 255 1 "*"
C G "" 3 265 1 "*"
C G "" 3 265 1 "*"
C G "" 3 265 1 "*"
D G "MCHP_MAC" 3 272 ""
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
D G "___TCPIP_STACK_CONFIGURATION" 5 29 ""
D G "STACK_USE_CCS_PICNET" 5 33 "FALSE"
D G "STACK_USE_CCS_PICENS" 5 37 "FALSE"
D G "TCP_NO_WAIT_FOR_ACK" 5 124 "FALSE"
D G "MY_DEFAULT_IP_ADDR_BYTE1" 5 131 "10" "IP ADDRESS"
D G "MY_DEFAULT_IP_ADDR_BYTE2" 5 132 "10" "This unit's IP address."
D G "MY_DEFAULT_IP_ADDR_BYTE3" 5 133 "5"
D G "MY_DEFAULT_IP_ADDR_BYTE4" 5 134 "15"
D G "MY_DEFAULT_MASK_BYTE1" 5 136 "0xff" "NETMASK"
D G "MY_DEFAULT_MASK_BYTE2" 5 137 "0xff" "Netmask tells the IP / ARP stack which"
D G "MY_DEFAULT_MASK_BYTE3" 5 138 "0xff" "IP's are on your local network."
D G "MY_DEFAULT_MASK_BYTE4" 5 139 "0x00"
D G "MY_DEFAULT_GATE_BYTE1" 5 141 "192" "GATEWAY IP ADDRESS"
D G "MY_DEFAULT_GATE_BYTE2" 5 142 "168" "Gateway acts as a conduit between two networks."
D G "MY_DEFAULT_GATE_BYTE3" 5 143 "100"
D G "MY_DEFAULT_GATE_BYTE4" 5 144 "1"
D G "MY_DEFAULT_MAC_BYTE1" 5 150 "0x00"
D G "MY_DEFAULT_MAC_BYTE2" 5 151 "0x04"
D G "MY_DEFAULT_MAC_BYTE3" 5 152 "0xa3"
D G "MY_DEFAULT_MAC_BYTE4" 5 153 "0x00"
D G "MY_DEFAULT_MAC_BYTE5" 5 154 "0x00"
D G "MY_DEFAULT_MAC_BYTE6" 5 155 "0x00"
D G "MAX_SOCKETS" 5 161 "5"
D G "MAX_UDP_SOCKETS" 5 168 "2"
D G "MAC_TX_BUFFER_SIZE" 5 190 "1024" "do not modify this line"
D G "MAC_TX_BUFFER_COUNT" 5 191 "1" "do not modify this line"
D G "MAC_RX_BUFFER_SIZE" 5 200 "MAC_TX_BUFFER_SIZE" "do not modify this line unless you are certain you know what you're doing"
D G "MY_MAC_BYTE1" 3 295 "AppConfig.MyMACAddr.v[0]"
D G "MY_MAC_BYTE2" 3 296 "AppConfig.MyMACAddr.v[1]"
D G "MY_MAC_BYTE3" 3 297 "AppConfig.MyMACAddr.v[2]"
D G "MY_MAC_BYTE4" 3 298 "AppConfig.MyMACAddr.v[3]"
D G "MY_MAC_BYTE5" 3 299 "AppConfig.MyMACAddr.v[4]"
D G "MY_MAC_BYTE6" 3 300 "AppConfig.MyMACAddr.v[5]"
C G "" 3 302 1 "*"
C G "" 3 302 1 "*"
D G "MY_MASK_BYTE1" 3 307 "AppConfig.MyMask.v[0]"
D G "MY_MASK_BYTE2" 3 308 "AppConfig.MyMask.v[1]"
D G "MY_MASK_BYTE3" 3 309 "AppConfig.MyMask.v[2]"
D G "MY_MASK_BYTE4" 3 310 "AppConfig.MyMask.v[3]"
C G "" 3 312 1 "*"
C G "" 3 312 1 "*"
D G "MY_IP" 3 319 "AppConfig.MyIPAddr"
D G "MY_IP_BYTE1" 3 321 "AppConfig.MyIPAddr.v[0]"
D G "MY_IP_BYTE2" 3 322 "AppConfig.MyIPAddr.v[1]"
D G "MY_IP_BYTE3" 3 323 "AppConfig.MyIPAddr.v[2]"
D G "MY_IP_BYTE4" 3 324 "AppConfig.MyIPAddr.v[3]"
C G "" 3 326 1 "*"
D G "MY_GATE_BYTE1" 3 330 "AppConfig.MyGateway.v[0]"
D G "MY_GATE_BYTE2" 3 331 "AppConfig.MyGateway.v[1]"
D G "MY_GATE_BYTE3" 3 332 "AppConfig.MyGateway.v[2]"
D G "MY_GATE_BYTE4" 3 333 "AppConfig.MyGateway.v[3]"
D G "MY_DNS_BYTE1" 3 338 "AppConfig.PrimaryDNSServer.v[0]"
D G "MY_DNS_BYTE2" 3 339 "AppConfig.PrimaryDNSServer.v[1]"
D G "MY_DNS_BYTE3" 3 340 "AppConfig.PrimaryDNSServer.v[2]"
D G "MY_DNS_BYTE4" 3 341 "AppConfig.PrimaryDNSServer.v[3]"
T G "BOOL" 3 377 "int1"
T G "BUFFER" 3 379 "int8"
T G "WORD" 3 381 "int16"
T G "DWORD" 3 382 "int32"
T G "BYTE_VAL" 3 398 "{int8 Val}"
T G "SWORD_VAL" 3 410 "{int32 Val}"
T G "WORD_VAL" 3 422 "{int16 Val,int8[2] v}" "typedef union _DWORD_VAL"
T G "DWORD_VAL" 3 484 "{DWORD Val,WORD[2] w,int8[4] v}"
D G "LOWER_LSB" 3 487 "(a)    (a).v[0]"
D G "LOWER_MSB" 3 488 "(a)   (a).v[1]"
D G "UPPER_LSB" 3 489 "(a)    (a).v[2]"
D G "UPPER_MSB" 3 490 "(a)    (a).v[3]"
T G "MAC_ADDR" 3 495 "{int8[6] v}"
T G "IP_ADDR" 3 501 "{int8[4] v,DWORD Val}"
T G "NODE_INFO" 3 508 "{MAC_ADDR MACAddr,IP_ADDR IPAddr}"
T G "APP_CONFIG" 3 526 "{IP_ADDR MyIPAddr,MAC_ADDR MyMACAddr,IP_ADDR MyMask,IP_ADDR MyGateway,IP_ADDR PrimaryDNSServer}" "typedef union _STACK_FLAGS"
V G "AppConfig" 3 537 "APP_CONFIG"
D G "StackIsInConfigMode" 3 542 "()   FALSE"
C L "StackInit" 3 546 1 "*"
C L "StackInit" 3 546 1 "*"
C L "StackInit" 3 546 1 "*"
C L "StackInit" 3 546 1 "*"
C L "StackInit" 3 546 1 "*"
C L "StackInit" 3 546 1 "*"
C L "StackInit" 3 546 1 "*"
F G "StackInit" 3 561 "void()" "* Function:        void StackTask(void)"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
C L "StackInit" 3 564 1 "*"
F G "StackTask" 3 583 "void()" "(C) Copyright 1996,2008 Custom Computer Services            ////"
D G "_STRING" 6 12 ""
D G "_STDDEF" 7 13 ""
D G "ptrdiff_t" 7 18 "unsigned int16"
D G "size_t" 7 24 "unsigned int16"
D G "wchar_t" 7 26 "char"
D G "NULL" 7 27 "0"
D G "offsetof" 7 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "StackTask" 6 19 10 "FUNCTION"
V L "s1" 6 34 "*int8"
V L "s2" 6 34 "*int8"
V L "n" 6 34 "int16"
F G "memmove" 6 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 6 36 "*int8"
V L "sc2" 6 37 "*int8"
D G "strcopy" 6 54 "strcpy"
C L "strncpy" 6 19 4 "FUNCTION"
V L "s1" 6 61 "*int8"
V L "s2" 6 61 "*int8"
V L "n" 6 61 "int16"
F G "strncpy" 6 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 6 63 "*int8"
C L "strcat" 6 19 3 "FUNCTION"
V L "s1" 6 78 "*int8"
V L "s2" 6 78 "*int8"
F G "strcat" 6 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 80 "*int8"
C L "strncat" 6 19 2 "FUNCTION"
V L "s1" 6 96 "*int8"
V L "s2" 6 96 "*int8"
V L "n" 6 96 "int16"
F G "strncat" 6 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 6 98 "*int8"
C L "memcmp" 6 19 3 "FUNCTION"
V L "s1" 6 120 "*int8"
V L "s2" 6 120 "*int8"
V L "n" 6 120 "int16"
F G "memcmp" 6 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 6 122 "*int8"
V L "su2" 6 122 "*int8"
C L "strcmp" 6 19 2 "FUNCTION"
V L "s1" 6 134 "*int8"
V L "s2" 6 134 "*int8"
F G "strcmp" 6 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 6 19 2 "FUNCTION"
V L "s1" 6 144 "*int8"
V L "s2" 6 144 "*int8"
F G "strcoll" 6 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 6 19 4 "FUNCTION"
V L "s1" 6 157 "*int8"
V L "s2" 6 157 "*int8"
V L "n" 6 157 "int16"
F G "strncmp" 6 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 6 19 3 "FUNCTION"
V L "s1" 6 169 "*int8"
V L "s2" 6 169 "*int8"
V L "n" 6 169 "int16"
F G "strxfrm" 6 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 6 171 "*int8"
V L "n1" 6 172 "int8"
C L "memchr" 6 19 3 "FUNCTION"
V L "s" 6 191 "*int8"
V L "c" 6 191 "int8"
V L "n" 6 191 "int16"
F G "memchr" 6 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 6 193 "int8"
V L "su" 6 194 "*int8"
C L "strchr" 6 19 2 "FUNCTION"
V L "s" 6 205 "*int8"
V L "c" 6 205 "int8"
F G "strchr" 6 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 6 19 4 "FUNCTION"
V L "s1" 6 217 "*int8"
V L "s2" 6 217 "*int8"
F G "strcspn" 6 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 6 219 "*int8"
V L "sc2" 6 219 "*int8"
C L "strpbrk" 6 19 4 "FUNCTION"
V L "s1" 6 232 "*int8"
V L "s2" 6 232 "*int8"
F G "strpbrk" 6 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 234 "*int8"
V L "sc2" 6 234 "*int8"
C L "strrchr" 6 19 2 "FUNCTION"
V L "s" 6 247 "*int8"
V L "c" 6 247 "int8"
F G "strrchr" 6 247 "*int8(*int8 s,int8 c)"
V L "p" 6 249 "*int8"
C L "strspn" 6 19 2 "FUNCTION"
V L "s1" 6 262 "*int8"
V L "s2" 6 262 "*int8"
F G "strspn" 6 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 6 264 "*int8"
V L "sc2" 6 264 "*int8"
C L "strstr" 6 19 6 "FUNCTION"
V L "s1" 6 281 "*int8"
V L "s2" 6 281 "*int8"
F G "strstr" 6 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 283 "*int8"
V L "t" 6 283 "*int8"
C L "strtok" 6 19 13 "FUNCTION"
V L "s1" 6 320 "*int8"
V L "s2" 6 320 "*int8"
F G "strtok" 6 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 6 322 "*int8"
V L "end" 6 322 "*int8"
V L "save" 6 323 "*int8"
C L "strlen" 6 19 6 "FUNCTION"
V L "s" 6 369 "*int8"
F G "strlen" 6 369 "int8(*int8 s)"
V L "sc" 6 371 "*int8"
C L "stricmp" 6 19 2 "FUNCTION"
V L "s1" 6 380 "*int8"
V L "s2" 6 380 "*int8"
F G "stricmp" 6 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 6 19 3 "FUNCTION"
V L "s" 6 394 "*int8"
F G "strlwr" 6 394 "*int8(*int8 s)"
V L "p" 6 396 "*int8"
D G "_STDLIB" 9 12 ""
D G "RAND_MAX" 9 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 9 25 "1"
T G "div_t" 9 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 9 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 7 3 6 "FUNCTION"
C L "atoi" 9 43 2 "FUNCTION"
C L "atoi" 9 46 1 "*"
C L "atoi" 9 46 1 "*"
V L "s" 9 50 "*int8"
F G "atoi" 9 50 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 9 58 "*int8"
F G "atoi32" 9 58 "sint32(*int8 s)"
C L "atoi32" 9 46 3 "FUNCTION"
V L "num" 9 79 "sint32"
V L "base" 9 79 "int8"
V L "s" 9 79 "*int8"
F G "itoa" 9 79 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 9 81 1 "*"
C L "itoa" 9 81 1 "*"
V L "s" 9 85 "*int8"
F G "atol" 9 85 "sint16(*int8 s)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
V L "s" 9 93 "*int8"
V L "endptr" 9 93 "*int8"
V L "base" 9 93 "sint8"
F G "strtol" 9 93 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
V L "s" 9 101 "*int8"
V L "endptr" 9 101 "*int8"
V L "base" 9 101 "sint8"
F G "strtoul" 9 101 "int16(*int8 s,*int8 endptr,sint8 base)" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 9 95 2 "FUNCTION"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
V L "s" 9 110 "*int8"
V L "endptr" 9 110 "*int8"
F G "strtof" 9 110 "float(*int8 s,*int8 endptr)"
D G "strtof48" 9 116 "(s, e) strtof(s, e)"
D G "strtod" 9 117 "(s, e) strtof(s, e)"
C L "strtof" 9 103 1 "FUNCTION"
C L "strtof" 9 120 1 "*"
D G "atof" 9 124 "(s)   strtof(s, 0)"
C L "strtof" 9 120 1 "FUNCTION"
C L "strtof" 9 143 1 "*"
C L "strtof" 9 143 1 "*"
C L "strtof" 9 143 1 "*"
V L "s" 9 149 "*int8"
F G "atoe" 9 149 "float(*int8 s)"
C L "atoe" 9 143 2 "FUNCTION"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
F G "rand" 9 169 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
V L "seed" 9 191 "int32"
F G "srand" 9 191 "void(int32 seed)" "Memory management functions"
C L "srand" 9 171 3 "FUNCTION"
V L "string" 9 205 "*int8"
F G "system" 9 205 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 9 171 1 "FUNCTION"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 4 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
D G "labs" 9 249 "abs"
V L "numer" 9 251 "sint8"
V L "denom" 9 251 "sint8"
F G "div" 9 251 "div_t(sint8 numer,sint8 denom)"
V L "numer" 9 252 "sint16"
V L "denom" 9 252 "sint16"
F G "ldiv" 9 252 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 9 229 4 "FUNCTION"
C L "ldiv" 7 2 7 "FUNCTION"
C L "ldiv" 6 2 7 "FUNCTION"
V L "numer" 9 274 "sint8"
V L "denom" 9 274 "sint8"
F G "div" 9 274 "div_t(sint8 numer,sint8 denom,sint8 )"
V L "val" 9 276 "div_t"
V L "numer" 9 282 "sint16"
V L "denom" 9 282 "sint16"
F G "ldiv" 9 282 "ldiv_t(sint16 numer,sint16 denom,sint16 )"
V L "val" 9 284 "ldiv_t"
V L "s" 9 361 "*int8"
F G "atoe" 9 361 "float(*int8 s)"
V L "pow10" 9 363 "float"
V L "result" 9 364 "float"
V L "sign" 9 365 "int8"
V L "expsign" 9 366 "int8"
V L "c" 9 367 "int8"
V L "ptr" 9 368 "int8"
V L "i" 9 369 "int8"
V L "exp" 9 370 "float"
V L "expcnt" 9 371 "int8"
C L "atoe" 9 397 1 "FUNCTION"
V L "s" 9 429 "*int8"
F G "atoi" 9 429 "sint8(*int8 s)"
V L "result" 9 431 "sint8"
V L "sign" 9 432 "int8"
V L "base" 9 432 "int8"
V L "index" 9 432 "int8"
V L "c" 9 433 "int8"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
V L "s" 9 498 "*int8"
F G "atol" 9 498 "sint16(*int8 s)"
V L "result" 9 500 "sint16"
V L "sign" 9 501 "int8"
V L "base" 9 501 "int8"
V L "index" 9 501 "int8"
V L "c" 9 502 "int8"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "mult_with10" 9 397 1 "FUNCTION"
V L "num" 9 565 "int32"
F G "mult_with10" 9 565 "sint32(int32 num)"
V L "s" 9 571 "*int8"
F G "atoi32" 9 571 "sint32(*int8 s)"
V L "result" 9 573 "sint32"
V L "sign" 9 574 "int8"
V L "base" 9 574 "int8"
V L "index" 9 574 "int8"
V L "c" 9 575 "int8"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
V L "num" 9 770 "sint32"
V L "base" 9 770 "int8"
V L "s" 9 770 "*int8"
F G "itoa" 9 770 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 9 772 "int32"
V L "i" 9 773 "int8"
V L "sign" 9 773 "int8"
V L "cnt" 9 773 "int8"
V L "c" 9 774 "int8"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
V L "s" 9 807 "*int8"
V L "endptr" 9 807 "*int8"
F G "strtof" 9 807 "float(*int8 s,*int8 endptr)"
V L "pow10" 9 809 "float"
V L "result" 9 810 "float"
V L "skip" 9 811 "int1"
V L "sign" 9 811 "int1"
V L "point" 9 811 "int1"
V L "c" 9 812 "int8"
V L "ptr" 9 813 "int8"
V L "s" 9 1025 "*int8"
V L "endptr" 9 1025 "*int8"
V L "base" 9 1025 "sint8"
F G "strtoul" 9 1025 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 9 1027 "*int8"
V L "s1" 9 1027 "*int8"
V L "sd" 9 1027 "*int8"
V L "x" 9 1028 "int16"
V L "sign" 9 1029 "int8"
V L "digits" 9 1030 "int8[1]"
C L "strtoul" 9 397 1 "FUNCTION"
C L "strtoul" 9 397 1 "FUNCTION"
C L "strtoul" 9 397 1 "FUNCTION"
V L "s" 9 1087 "*int8"
V L "endptr" 9 1087 "*int8"
V L "base" 9 1087 "sint8"
F G "strtol" 9 1087 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 9 1089 "*int8"
V L "s1" 9 1089 "*int8"
V L "sd" 9 1089 "*int8"
V L "x" 9 1090 "sint16"
V L "sign" 9 1091 "int8"
V L "digits" 9 1092 "int8[1]"
C L "strtol" 9 397 1 "FUNCTION"
C L "strtol" 9 397 1 "FUNCTION"
C L "strtol" 9 397 1 "FUNCTION"
V L "string" 9 1150 "*int8"
F G "system" 9 1150 "sint8(*int8 string,int16 n)"
V L "s" 9 1155 "*int8"
V L "n" 9 1155 "int16"
F G "mblen" 9 1155 "int8(*int8 s,int16 n)"
V L "pwc" 9 1160 "*int8"
V L "s" 9 1160 "*int8"
V L "n" 9 1160 "int16"
F G "mbtowc" 9 1160 "int8(*int8 pwc,*int8 s,int16 n)"
V L "s" 9 1166 "*int8"
V L "wchar" 9 1166 "int8"
F G "wctomb" 9 1166 "int8(*int8 s,int8 wchar)"
V L "pwcs" 9 1172 "*int8"
V L "s" 9 1172 "*int8"
V L "n" 9 1172 "int16"
F G "mbstowcs" 9 1172 "int16(*int8 pwcs,*int8 s,int16 n)"
V L "s" 9 1178 "*int8"
V L "pwcs" 9 1178 "*int8"
V L "n" 9 1178 "int16"
F G "wcstombs" 9 1178 "int16(*int8 s,*int8 pwcs,int16 n)"
V G "_Randseed" 9 1188 "int32"
F G "rand" 9 1190 "int16(int16 ,int16 )"
V L "seed" 9 1196 "int32"
F G "srand" 9 1196 "void(int32 seed,*int8 p2)"
V L "p1" 9 1206 "*int8"
V L "p2" 9 1206 "*int8"
T G "*_Cmpfun" 9 1206 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 9 1213 "*int8"
V L "qitems" 9 1213 "int8"
V L "qsize" 9 1213 "int8"
V L "cmp" 9 1213 "_Cmpfun"
F G "qsort" 9 1213 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 9 1214 "int8"
V L "j" 9 1214 "int8"
V L "i" 9 1214 "int8"
V L "l" 9 1214 "int8"
V L "done" 9 1215 "int1"
V L "t" 9 1216 "int8[16]"
V L "key" 9 1241 "*int8"
V L "base" 9 1241 "*int8"
V L "num" 9 1241 "int16"
V L "width" 9 1241 "int16"
V L "cmp" 9 1241 "_Cmpfun"
F G "bsearch" 9 1241 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)"
V L "p" 9 1243 "*int8"
V L "q" 9 1243 "*int8"
V L "n" 9 1244 "int16"
V L "pivot" 9 1245 "int16"
V L "val" 9 1246 "sint8"
C L "bsearch" 9 397 1 "FUNCTION"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
D G "HELPERS_H" 11 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
V L "Dest" 11 53 "*int8"
V L "BufferLen" 11 53 "int8"
F G "ReadStringUART" 11 53 "int8(*int8 Dest,int8 BufferLen)"
V L "AsciiChars" 11 54 "WORD_VAL"
F G "hexatob" 11 54 "int8(WORD_VAL AsciiChars)"
V L "b" 11 55 "int8"
F G "btohexa_high" 11 55 "int8(int8 b)"
V L "b" 11 56 "int8"
F G "btohexa_low" 11 56 "int8(int8 b)"
V L "v" 11 58 "WORD_VAL"
F G "swaps" 11 58 "WORD(WORD_VAL v)"
V L "v" 11 59 "DWORD_VAL"
F G "swapl" 11 59 "DWORD(DWORD_VAL v)"
V L "buffer" 11 61 "*int8"
V L "len" 11 61 "WORD"
F G "CalcIPChecksum" 11 61 "WORD(*int8 buffer,WORD len)"
V L "len" 11 62 "WORD"
F G "CalcIPBufferChecksum" 11 62 "WORD(WORD len)" "*                  MAC Module Defs for Microchip Stack"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
D G "MAC_H" 12 41 ""
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 2 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
D G "MAC_IP" 12 45 " (0u)"
D G "MAC_ARP" 12 46 " (0x6u)"
D G "MAC_UNKNOWN" 12 47 " (0x0ffu)"
D G "INVALID_BUFFER" 12 49 " (0xffu)"
C L "CalcIPBufferChecksum" 12 51 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
D G "ENC28J60_H" 14 42 ""
T G "TXSTATUS" 14 68 "{int8[7] v}"
T G "RXSTATUS" 14 91 "{int8[4] v}" "* Register locations"
D G "ERDPTL" 14 97 "0x00"
D G "ERDPTH" 14 98 "0x01"
D G "EWRPTL" 14 99 "0x02"
D G "EWRPTH" 14 100 "0x03"
D G "ETXSTL" 14 101 "0x04"
D G "ETXSTH" 14 102 "0x05"
D G "ETXNDL" 14 103 "0x06"
D G "ETXNDH" 14 104 "0x07"
D G "ERXSTL" 14 105 "0x08"
D G "ERXSTH" 14 106 "0x09"
D G "ERXNDL" 14 107 "0x0A"
D G "ERXNDH" 14 108 "0x0B"
D G "ERXRDPTL" 14 109 "0x0C"
D G "ERXRDPTH" 14 110 "0x0D"
D G "ERXWRPTL" 14 111 "0x0E"
D G "ERXWRPTH" 14 112 "0x0F"
D G "EDMASTL" 14 113 "0x10"
D G "EDMASTH" 14 114 "0x11"
D G "EDMANDL" 14 115 "0x12"
D G "EDMANDH" 14 116 "0x13"
D G "EDMADSTL" 14 117 "0x14"
D G "EDMADSTH" 14 118 "0x15"
D G "EDMACSL" 14 119 "0x16"
D G "EDMACSH" 14 120 "0x17"
D G "EIE" 14 124 "0x1B"
D G "EIR" 14 125 "0x1C"
D G "ESTAT" 14 126 "0x1D"
D G "ECON2" 14 127 "0x1E"
D G "ECON1" 14 128 "0x1F"
D G "EHT0" 14 131 "0x100"
D G "EHT1" 14 132 "0x101"
D G "EHT2" 14 133 "0x102"
D G "EHT3" 14 134 "0x103"
D G "EHT4" 14 135 "0x104"
D G "EHT5" 14 136 "0x105"
D G "EHT6" 14 137 "0x106"
D G "EHT7" 14 138 "0x107"
D G "EPMM0" 14 139 "0x108"
D G "EPMM1" 14 140 "0x109"
D G "EPMM2" 14 141 "0x10A"
D G "EPMM3" 14 142 "0x10B"
D G "EPMM4" 14 143 "0x10C"
D G "EPMM5" 14 144 "0x10D"
D G "EPMM6" 14 145 "0x10E"
D G "EPMM7" 14 146 "0x10F"
D G "EPMCSL" 14 147 "0x110"
D G "EPMCSH" 14 148 "0x111"
D G "EPMOL" 14 151 "0x114"
D G "EPMOH" 14 152 "0x115"
D G "ERXFCON" 14 155 "0x118"
D G "EPKTCNT" 14 156 "0x119"
D G "MACON1" 14 165 "0x200"
D G "MACON2" 14 166 "0x201"
D G "MACON3" 14 168 "0x202"
D G "MACON4" 14 169 "0x203"
D G "MABBIPG" 14 170 "0x204"
D G "MAIPGL" 14 172 "0x206"
D G "MAIPGH" 14 173 "0x207"
D G "MACLCON1" 14 174 "0x208"
D G "MACLCON2" 14 175 "0x209"
D G "MAMXFLL" 14 176 "0x20A"
D G "MAMXFLH" 14 177 "0x20B"
D G "MICMD" 14 184 "0x212"
D G "MIREGADR" 14 186 "0x214"
D G "MIWRL" 14 188 "0x216"
D G "MIWRH" 14 189 "0x217"
D G "MIRDL" 14 190 "0x218"
D G "MIRDH" 14 191 "0x219"
D G "MAADR5" 14 200 "0x300"
D G "MAADR6" 14 201 "0x301"
D G "MAADR3" 14 202 "0x302"
D G "MAADR4" 14 203 "0x303"
D G "MAADR1" 14 204 "0x304"
D G "MAADR2" 14 205 "0x305"
D G "EBSTSD" 14 206 "0x306"
D G "EBSTCON" 14 207 "0x307"
D G "EBSTCSL" 14 208 "0x308"
D G "EBSTCSH" 14 209 "0x309"
D G "MISTAT" 14 210 "0x30A"
D G "EREVID" 14 218 "0x312"
D G "ECOCON" 14 221 "0x315"
D G "EFLOCON" 14 223 "0x317"
D G "EPAUSL" 14 224 "0x318"
D G "EPAUSH" 14 225 "0x319"
C L "CalcIPBufferChecksum" 14 1 7 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
T G "REG" 14 406 "{int8 Val}" "* PH Register Locations"
D G "PHCON1" 14 412 "0x00"
D G "PHSTAT1" 14 413 "0x01"
D G "PHID1" 14 414 "0x02"
D G "PHID2" 14 415 "0x03"
D G "PHCON2" 14 416 "0x10"
D G "PHSTAT2" 14 417 "0x11"
D G "PHIE" 14 418 "0x12"
D G "PHIR" 14 419 "0x13"
D G "PHLCON" 14 420 "0x14"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
T G "PHYREG" 14 546 "{int16 Val,WORD_VAL VAL}" "* Individual Register Bits"
D G "EIE_INTIE" 14 555 " (1<<7)"
D G "EIE_PKTIE" 14 556 " (1<<6)"
D G "EIE_DMAIE" 14 557 " (1<<5)"
D G "EIE_LINKIE" 14 558 " (1<<4)"
D G "EIE_TXIE" 14 559 " (1<<3)"
D G "EIE_TXERIE" 14 560 " (1<<1)"
D G "EIE_RXERIE" 14 561 " (1)"
D G "EIR_PKTIF" 14 564 " (1<<6)"
D G "EIR_DMAIF" 14 565 " (1<<5)"
D G "EIR_LINKIF" 14 566 " (1<<4)"
D G "EIR_TXIF" 14 567 " (1<<3)"
D G "EIR_TXERIF" 14 568 " (1<<1)"
D G "EIR_RXERIF" 14 569 " (1)"
D G "ESTAT_INT" 14 572 " (1<<7)"
D G "ESTAT_BUFFER" 14 573 " (1<<6)"
D G "ESTAT_LATECOL" 14 574 " (1<<4)"
D G "ESTAT_RXBUSY" 14 575 " (1<<2)"
D G "ESTAT_TXABRT" 14 576 " (1<<1)"
D G "ESTAT_CLKRDY" 14 577 " (1)"
D G "ECON2_AUTOINC" 14 580 " (1<<7)"
D G "ECON2_PKTDEC" 14 581 " (1<<6)"
D G "ECON2_PWRSV" 14 582 " (1<<5)"
D G "ECON2_VRPS" 14 583 " (1<<3)"
D G "ECON1_TXRST" 14 586 " (1<<7)"
D G "ECON1_RXRST" 14 587 " (1<<6)"
D G "ECON1_DMAST" 14 588 " (1<<5)"
D G "ECON1_CSUMEN" 14 589 " (1<<4)"
D G "ECON1_TXRTS" 14 590 " (1<<3)"
D G "ECON1_RXEN" 14 591 " (1<<2)"
D G "ECON1_BSEL1" 14 592 " (1<<1)"
D G "ECON1_BSEL0" 14 593 " (1)"
D G "ERXFCON_UCEN" 14 596 " (1<<7)"
D G "ERXFCON_ANDOR" 14 597 " (1<<6)"
D G "ERXFCON_CRCEN" 14 598 " (1<<5)"
D G "ERXFCON_PMEN" 14 599 " (1<<4)"
D G "ERXFCON_MPEN" 14 600 " (1<<3)"
D G "ERXFCON_HTEN" 14 601 " (1<<2)"
D G "ERXFCON_MCEN" 14 602 " (1<<1)"
D G "ERXFCON_BCEN" 14 603 " (1)"
D G "MACON1_TXPAUS" 14 606 " (1<<3)"
D G "MACON1_RXPAUS" 14 607 " (1<<2)"
D G "MACON1_PASSALL" 14 608 " (1<<1)"
D G "MACON1_MARXEN" 14 609 " (1)"
D G "MACON3_PADCFG2" 14 612 " (1<<7)"
D G "MACON3_PADCFG1" 14 613 " (1<<6)"
D G "MACON3_PADCFG0" 14 614 " (1<<5)"
D G "MACON3_TXCRCEN" 14 615 " (1<<4)"
D G "MACON3_PHDRLEN" 14 616 " (1<<3)"
D G "MACON3_HFRMEN" 14 617 " (1<<2)"
D G "MACON3_FRMLNEN" 14 618 " (1<<1)"
D G "MACON3_FULDPX" 14 619 " (1)"
D G "MACON4_DEFER" 14 622 " (1<<6)"
D G "MACON4_BPEN" 14 623 " (1<<5)"
D G "MACON4_NOBKOFF" 14 624 " (1<<4)"
D G "MICMD_MIISCAN" 14 628 " (1<<1)"
D G "MICMD_MIIRD" 14 629 " (1)"
D G "EBSTCON_PSV2" 14 632 " (1<<7)"
D G "EBSTCON_PSV1" 14 633 " (1<<6)"
D G "EBSTCON_PSV0" 14 634 " (1<<5)"
D G "EBSTCON_PSEL" 14 635 " (1<<4)"
D G "EBSTCON_TMSEL1" 14 636 " (1<<3)"
D G "EBSTCON_TMSEL0" 14 637 " (1<<2)"
D G "EBSTCON_TME" 14 638 " (1<<1)"
D G "EBSTCON_BISTST" 14 639 " (1)"
D G "MISTAT_NVALID" 14 642 " (1<<2)"
D G "MISTAT_SCAN" 14 643 " (1<<1)"
D G "MISTAT_BUSY" 14 644 " (1)"
D G "ECOCON_COCON2" 14 647 " (1<<2)"
D G "ECOCON_COCON1" 14 648 " (1<<1)"
D G "ECOCON_COCON0" 14 649 " (1)"
D G "EFLOCON_FULDPXS" 14 652 " (1<<2)"
D G "EFLOCON_FCEN1" 14 653 " (1<<1)"
D G "EFLOCON_FCEN0" 14 654 " (1)"
D G "PHCON1_PRST" 14 661 " (1ul<<15)"
D G "PHCON1_PLOOPBK" 14 662 " (1ul<<14)"
D G "PHCON1_PPWRSV" 14 663 " (1ul<<11)"
D G "PHCON1_PDPXMD" 14 664 " (1ul<<8)"
D G "PHSTAT1_PFDPX" 14 667 " (1ul<<12)"
D G "PHSTAT1_PHDPX" 14 668 " (1ul<<11)"
D G "PHSTAT1_LLSTAT" 14 669 " (1ul<<2)"
D G "PHSTAT1_JBSTAT" 14 670 " (1ul<<1)"
D G "PHID2_PID24" 14 673 " (1ul<<15)"
D G "PHID2_PID23" 14 674 " (1ul<<14)"
D G "PHID2_PID22" 14 675 " (1ul<<13)"
D G "PHID2_PID21" 14 676 " (1ul<<12)"
D G "PHID2_PID20" 14 677 " (1ul<<11)"
D G "PHID2_PID19" 14 678 " (1ul<<10)"
D G "PHID2_PPN5" 14 679 " (1ul<<9)"
D G "PHID2_PPN4" 14 680 " (1ul<<8)"
D G "PHID2_PPN3" 14 681 " (1ul<<7)"
D G "PHID2_PPN2" 14 682 " (1ul<<6)"
D G "PHID2_PPN1" 14 683 " (1ul<<5)"
D G "PHID2_PPN0" 14 684 " (1ul<<4)"
D G "PHID2_PREV3" 14 685 " (1ul<<3)"
D G "PHID2_PREV2" 14 686 " (1ul<<2)"
D G "PHID2_PREV1" 14 687 " (1ul<<1)"
D G "PHID2_PREV0" 14 688 " (1ul)"
D G "PHCON2_FRCLNK" 14 691 " (1ul<<14)"
D G "PHCON2_TXDIS" 14 692 " (1ul<<13)"
D G "PHCON2_JABBER" 14 693 " (1ul<<10)"
D G "PHCON2_HDLDIS" 14 694 " (1ul<<8)"
D G "PHSTAT2_TXSTAT" 14 697 " (1ul<<13)"
D G "PHSTAT2_RXSTAT" 14 698 " (1ul<<12)"
D G "PHSTAT2_COLSTAT" 14 699 " (1ul<<11)"
D G "PHSTAT2_LSTAT" 14 700 " (1ul<<10)"
D G "PHSTAT2_DPXSTAT" 14 701 " (1ul<<9)"
D G "PHSTAT2_PLRITY" 14 702 " (1ul<<5)"
D G "PHIE_PLNKIE" 14 705 " (1ul<<4)"
D G "PHIE_PGEIE" 14 706 " (1ul<<1)"
D G "PHIR_PLNKIF" 14 709 " (1ul<<4)"
D G "PHIR_PGIF" 14 710 " (1ul<<2)"
D G "PHLCON_LACFG3" 14 713 " (1ul<<11)"
D G "PHLCON_LACFG2" 14 714 " (1ul<<10)"
D G "PHLCON_LACFG1" 14 715 " (1ul<<9)"
D G "PHLCON_LACFG0" 14 716 " (1ul<<8)"
D G "PHLCON_LBCFG3" 14 717 " (1ul<<7)"
D G "PHLCON_LBCFG2" 14 718 " (1ul<<6)"
D G "PHLCON_LBCFG1" 14 719 " (1ul<<5)"
D G "PHLCON_LBCFG0" 14 720 " (1ul<<4)"
D G "PHLCON_LFRQ1" 14 721 " (1ul<<3)"
D G "PHLCON_LFRQ0" 14 722 " (1ul<<2)"
D G "PHLCON_STRCH" 14 723 " (1ul<<1)"
C L "CalcIPBufferChecksum" 12 64 1 "FUNCTION"
E G "HALF" 12 67 "0"
E G "FULL" 12 68 "1"
E G "USE_PHY" 12 69 "2"
T G "DUPLEX" 12 69 "_DUPLEX"
E G "Divide1" 12 73 "0"
E G "Divide2" 12 74 "1"
E G "Divide3" 12 75 "2"
E G "Divide4" 12 76 "3"
E G "Divide8" 12 77 "4"
T G "CLK_CONFIG" 12 77 "_CLK_CONFIG"
V L "DuplexState" 12 78 "DUPLEX"
F G "MACSetDuplex" 12 78 "void(DUPLEX DuplexState)"
V L "len" 12 79 "WORD"
F G "CalcIPBufferChecksum" 12 79 "WORD(WORD len)"
F G "MACPowerDown" 12 81 "void(WORD len)"
F G "MACPowerUp" 12 82 "void()"
V L "offset" 12 83 "WORD"
V L "len" 12 83 "WORD"
F G "MACCalcRxChecksum" 12 83 "WORD(WORD offset,WORD len)"
V L "offset" 12 84 "WORD"
V L "len" 12 84 "WORD"
F G "MACCalcTxChecksum" 12 84 "WORD(WORD offset,WORD len)"
V L "RxOffset" 12 85 "WORD"
V L "TxOffset" 12 85 "WORD"
V L "len" 12 85 "WORD"
F G "MACCopyRxToTx" 12 85 "void(WORD RxOffset,WORD TxOffset,WORD len)"
V L "Register" 12 86 "int8"
V L "Data" 12 86 "WORD"
F G "WritePHYReg" 12 86 "void(int8 Register,WORD Data)"
V L "Register" 12 87 "int8"
F G "ReadPHYReg" 12 87 "PHYREG(int8 Register)"
V L "DestMACAddr" 12 88 "MAC_ADDR"
F G "SetRXHashTableEntry" 12 88 "void(MAC_ADDR DestMACAddr)" "* Macro:           void SetLEDConfig(WORD NewConfig)"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
D G "SetLEDConfig" 12 139 "(NewConfig)      WritePHYReg(PHLCON, NewConfig)"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
D G "GetLEDConfig" 12 188 "()      ReadPHYReg(PHLCON).Val"
F G "MACInit" 12 193 "void()"
F G "MACIsLinked" 12 194 "int8()"
V L "remote" 12 196 "*MAC_ADDR"
V L "type" 12 196 "*int8"
F G "MACGetHeader" 12 196 "int8(*MAC_ADDR remote,*int8 type)"
V L "offset" 12 197 "WORD"
F G "MACSetRxBuffer" 12 197 "void(WORD offset)"
F G "MACGet" 12 198 "int8()"
V L "val" 12 199 "*int8"
V L "len" 12 199 "WORD"
F G "MACGetArray" 12 199 "WORD(*int8 val,WORD len)"
F G "MACDiscardRx" 12 200 "void()"
F G "MACGetFreeRxSize" 12 201 "WORD()"
V L "remote" 12 203 "*MAC_ADDR"
V L "type" 12 204 "int8"
V L "dataLen" 12 205 "WORD"
F G "MACPutHeader" 12 205 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
V L "HighPriority" 12 206 "int8"
F G "MACIsTxReady" 12 206 "int8(int8 HighPriority)"
V L "buffer" 12 207 "BUFFER"
V L "offset" 12 207 "WORD"
F G "MACSetTxBuffer" 12 207 "void(BUFFER buffer,WORD offset)"
V L "val" 12 208 "int8"
F G "MACPut" 12 208 "void(int8 val)"
V L "val" 12 209 "*int8"
V L "len" 12 209 "WORD"
F G "MACPutArray" 12 209 "void(*int8 val,WORD len)"
V L "buffer" 12 210 "BUFFER"
F G "MACDiscardTx" 12 210 "void(BUFFER buffer)"
F G "MACFlush" 12 211 "void()"
V L "HighPriority" 12 212 "int8"
F G "MACGetTxBuffer" 12 212 "BUFFER(int8 HighPriority)" "extern *"
V G "CurrentTxBuffer" 12 215 "BUFFER" "* Function:        BYTE hexatob(WORD_VAL AsciiChars)"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
V L "AsciiChars" 10 67 "WORD_VAL"
F G "hexatob" 10 67 "int8(WORD_VAL AsciiChars)" "Convert lowercase to uppercase"
C L "hexatob" 10 51 1 "FUNCTION"
C L "hexatob" 10 51 1 "FUNCTION"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
V L "b" 10 108 "int8"
F G "btohexa_high" 10 108 "int8(int8 b)"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
V L "b" 10 132 "int8"
F G "btohexa_low" 10 132 "int8(int8 b)"
V L "v" 10 138 "WORD_VAL"
F G "swaps" 10 138 "WORD(WORD_VAL v)"
V L "new" 10 140 "WORD_VAL"
V L "v" 10 148 "DWORD_VAL"
F G "swapl" 10 148 "DWORD(DWORD_VAL v)"
V L "new" 10 150 "DWORD_VAL"
V L "buffer" 10 160 "*int8"
V L "count" 10 160 "WORD"
F G "CalcIPChecksum" 10 160 "WORD(*int8 buffer,WORD count)"
V L "i" 10 162 "WORD"
V L "val" 10 163 "*WORD"
V L "tempSum" 10 173 "{DWORD Val}"
V L "sum" 10 173 "{DWORD Val}"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 1 "*"
C G "" 10 200 7 "*"
C G "" 10 258 8 "*t"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
D G "TICK_INCLUDE" 15 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "TICK_H" 16 43 ""
T G "TICKTYPE" 16 45 "int16" "* This value is used by TCP to implement timeout actions."
D G "TICKS_PER_SECOND" 16 50 "12" "10 original value (MiE)"
D G "CYCLES_PER_TICKS_PER_SECOND" 16 57 "getenv("CLOCK")/(4 * 16 * TICKS_PER_SECOND)"
D G "TICK_COUNTER" 16 68 "0xFFFF-CYCLES_PER_TICKS_PER_SECOND"
D G "TICK_SECOND" 16 82 "TICKS_PER_SECOND"
D G "TickGetDiff" 16 85 "(a, b)       ((TICKTYPE)(a < b) ? (((TICKTYPE)0xffff - b) + a + 1) : (a - b))"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
F G "TickInit" 16 103 "void()" "* Function:        TICK TickGet(void)"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
F G "TickGet" 16 122 "TICKTYPE()" "* Function:        void TickUpdate(void)"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 2 "*"
V G "TickCount" 15 50 "TICKTYPE"
C L "TickGet" 15 50 1 "FUNCTION"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
F G "TickInit" 15 68 "void()"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
F G "TickGet" 15 93 "TICKTYPE()"
V L "ret" 15 95 "int16"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
V G "second_counter" 15 117 "int8"
V G "second_counter_intermediate" 15 118 "int8"
F G "Tick_Isr" 15 126 "void()"
C L "Tick_Isr" 15 102 1 "FUNCTION"
C L "Tick_Isr" 15 102 1 "FUNCTION"
C L "Tick_Isr" 15 102 1 "FUNCTION"
D G "debug_stack" 2 74 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
D G "THIS_IS_MAC_LAYER" 17 47 ""
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 2 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
D G "debug_mac" 17 61 ""
D G "ENC_MAC_USE_SPI" 17 78 "FALSE" "due to an errata in the ENC28J60, you should always use HW SPI to assure that SPI clock is over 8MHz!"
D G "mac_enc_spi_tris_init" 17 80 "()"
D G "SPISelectEthernet" 17 82 "()     output_low(PIN_ENC_MAC_CS)" "changed by ccs"
D G "SPIUnselectEthernet" 17 83 "()   output_high(PIN_ENC_MAC_CS)" "changed by ccs"
D G "HALF_DUPLEX" 17 104 ""
D G "LOW" 17 109 "(a)                (a & 0xFF)"
D G "HIGH" 17 110 "(a)             ((a>>8) & 0xFF)"
D G "RAMSIZE" 17 113 "8192ul"
D G "TXSTART" 17 114 " (RAMSIZE-(MAC_TX_BUFFER_COUNT * (MAC_TX_BUFFER_SIZE + 8ul)))"
D G "RXSTART" 17 115 " (0ul)" "Should be an even memory address"
D G "RXSTOP" 17 116 " ((TXSTART-2ul) | 0x0001ul)" "Odd for errata workaround"
D G "RXSIZE" 17 117 " (RXSTOP-RXSTART+1ul)"
D G "WCR" 17 120 " (0b010<<5)" "Write Control Register command"
D G "BFS" 17 121 " (0b100<<5)" "Bit Field Set command"
D G "BFC" 17 122 " (0b101<<5)" "Bit Field Clear command"
D G "RCR" 17 123 " (0b000<<5)" "Read Control Register command"
D G "RBM" 17 124 " ((0b001<<5) | 0x1A)" "Read Buffer Memory command"
D G "WBM" 17 125 " ((0b011<<5) | 0x1A)" "Write Buffer Memory command"
D G "SR" 17 126 " ((0b111<<5) | 0x1F)" "System Reset command does not use an address."
D G "ETHER_IP" 17 129 " (0x00u)"
D G "ETHER_ARP" 17 130 " (0x06u)"
D G "MAXFRAMEC" 17 132 " (1500u+sizeof(ETHER_HEADER)+4u)"
T G "ETHER_HEADER" 17 141 "{MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" "A header appended at the start of all RX frames by the hardware"
T G "ENC_PREAMBLE" 17 152 "{int16 NextPacketPointer,RXSTATUS StatusVector,MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}"
T G "DATA_BUFFER" 17 163 "{WORD_VAL StartAddress,WORD_VAL EndAddress}"
V L "DuplexState" 17 165 "DUPLEX"
F G "MACSetDuplex" 17 165 "void(DUPLEX DuplexState)" "Prototypes of functions intended for MAC layer use only."
V L "Register" 17 168 "WORD"
F G "BankSel" 17 168 "void(WORD Register)"
V L "Address" 17 169 "int8"
F G "ReadETHReg" 17 169 "REG(int8 Address)"
V L "Address" 17 170 "int8"
F G "ReadMACReg" 17 170 "REG(int8 Address)"
V L "Address" 17 171 "int8"
V L "Data" 17 171 "int8"
F G "WriteReg" 17 171 "void(int8 Address,int8 Data)"
V L "Address" 17 172 "int8"
V L "Data" 17 172 "int8"
F G "BFCReg" 17 172 "void(int8 Address,int8 Data)"
V L "Address" 17 173 "int8"
V L "Data" 17 173 "int8"
F G "BFSReg" 17 173 "void(int8 Address,int8 Data)"
F G "SendSystemReset" 17 174 "void()" "static void GetRegs(void);"
C L "SendSystemReset" 17 85 3 "FUNCTION"
V G "NextPacketLocation" 17 193 "WORD_VAL"
V G "CurrentPacketLocation" 17 194 "WORD_VAL"
V G "WasDiscarded" 17 195 "BOOL"
V G "ENCRevID" 17 196 "int8" "ENCSPIInit() added by CCS."
C L "SendSystemReset" 17 85 1 "FUNCTION"
F G "ENCSPIInit" 17 200 "void()"
C L "ENCSPIInit" 17 85 1 "FUNCTION"
C L "ENCSPIInit" 17 85 1 "FUNCTION"
C L "ENCSPIInit" 17 85 5 "FUNCTION"
C L "ENCSPIInit" 17 85 1 "FUNCTION"
C L "ENCSPIXfer" 17 85 2 "FUNCTION"
V L "c" 17 224 "int8"
F G "ENCSPIXfer" 17 224 "int8(int8 c)"
V L "i" 17 229 "int8"
V L "in" 17 229 "int8"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
C L "MACInit" 17 240 1 "*"
F G "MACInit" 17 257 "void()"
V L "i" 17 259 "int8"
C L "MACInit" 17 240 4 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 2 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 7 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 3 "FUNCTION"
C L "MACInit" 17 240 3 "FUNCTION"
C L "MACInit" 17 240 3 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 2 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 1 "FUNCTION"
C L "MACInit" 17 240 2 "FUNCTION"
C L "MACIsLinked" 17 240 1 "FUNCTION"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
C L "MACIsLinked" 17 387 1 "*"
F G "MACIsLinked" 17 406 "int8()" "LLSTAT is a latching low link status bit.  Therefore, if the link"
C L "MACIsLinked" 17 387 4 "FUNCTION"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
C L "MACIsTxReady" 17 416 1 "*"
V L "HighPriority" 17 436 "int8"
F G "MACIsTxReady" 17 436 "int8(int8 HighPriority)"
V L "HighPriority" 17 469 "int8"
F G "MACGetTxBuffer" 17 469 "BUFFER(int8 HighPriority)"
V L "buffer" 17 501 "BUFFER"
F G "MACDiscardTx" 17 501 "void(BUFFER buffer)"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
C L "MACDiscardRx" 17 513 1 "*"
F G "MACDiscardRx" 17 530 "void(BUFFER buffer)"
V L "NewRXRDLocation" 17 532 "WORD_VAL" "Make sure the current packet was not already discarded"
C L "MACDiscardRx" 17 513 4 "FUNCTION"
C L "MACDiscardRx" 17 513 1 "FUNCTION"
C L "MACDiscardRx" 17 513 3 "FUNCTION"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
C L "MACGetFreeRxSize" 17 564 1 "*"
F G "MACGetFreeRxSize" 17 580 "WORD()"
V L "ReadPT" 17 582 "WORD_VAL"
V L "WritePT" 17 582 "WORD_VAL" "Read the Ethernet hardware buffer write pointer.  Because packets can be"
C L "MACGetFreeRxSize" 17 564 3 "FUNCTION"
C L "MACGetFreeRxSize" 17 564 1 "FUNCTION"
C L "MACGetFreeRxSize" 17 564 1 "FUNCTION"
C L "MACGetFreeRxSize" 17 564 2 "FUNCTION"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
C L "MACGetHeader" 17 621 1 "*"
V L "remote" 17 644 "*MAC_ADDR"
V L "type" 17 644 "*int8"
F G "MACGetHeader" 17 644 "int8(*MAC_ADDR remote,*int8 type)"
V L "header" 17 646 "ENC_PREAMBLE" "Test if at least one packet has been received and is waiting"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 2 "FUNCTION"
C L "MACGetHeader" 17 621 3 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 3 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACGetHeader" 17 621 1 "FUNCTION"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
C L "MACPutHeader" 17 710 1 "*"
V L "remote" 17 736 "*MAC_ADDR"
V L "type" 17 737 "int8"
V L "dataLen" 17 738 "WORD"
F G "MACPutHeader" 17 738 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
C L "MACPutHeader" 17 710 1 "FUNCTION"
C L "MACPutHeader" 17 710 1 "FUNCTION"
C L "MACPutHeader" 17 710 1 "FUNCTION"
C L "MACPutHeader" 17 710 2 "FUNCTION"
C L "MACPutHeader" 17 710 1 "FUNCTION"
C L "MACPutHeader" 17 710 1 "FUNCTION"
C L "MACPutHeader" 17 710 1 "FUNCTION"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
C L "MACFlush" 17 778 1 "*"
F G "MACFlush" 17 801 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
C L "MACFlush" 17 778 2 "FUNCTION"
C L "MACFlush" 17 778 5 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
V L "ReadPtrSave" 17 836 "WORD_VAL"
V L "TXEnd" 17 837 "WORD_VAL"
V L "TXStatus" 17 838 "TXSTATUS"
V L "i" 17 839 "int8" "Cancel the previous transmission if it has become stuck set"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 3 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACFlush" 17 778 1 "FUNCTION"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
C L "MACSetRxBuffer" 17 897 1 "*"
V L "offset" 17 920 "WORD"
F G "MACSetRxBuffer" 17 920 "void(WORD offset)"
V L "ReadPT" 17 922 "WORD_VAL" "Determine the address of the beginning of the entire packet"
C L "MACSetRxBuffer" 17 897 1 "FUNCTION"
C L "MACSetRxBuffer" 17 897 1 "FUNCTION"
C L "MACSetRxBuffer" 17 897 1 "FUNCTION"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
C L "MACSetTxBuffer" 17 941 1 "*"
V L "buffer" 17 963 "BUFFER"
V L "offset" 17 963 "WORD"
F G "MACSetTxBuffer" 17 963 "void(BUFFER buffer,WORD offset)"
C L "MACSetTxBuffer" 17 941 4 "FUNCTION"
C L "MACSetTxBuffer" 17 941 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 941 2 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
C L "MACCalcRxChecksum" 17 989 1 "*"
V L "offset" 17 1008 "WORD"
V L "len" 17 1008 "WORD"
F G "MACCalcRxChecksum" 17 1008 "WORD(WORD offset,WORD len)"
V L "temp" 17 1010 "WORD_VAL" "Add the offset requested by firmware plus the Ethernet header"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 989 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
C L "MACCalcTxChecksum" 17 1046 1 "*"
V L "offset" 17 1065 "WORD"
V L "len" 17 1065 "WORD"
F G "MACCalcTxChecksum" 17 1065 "WORD(WORD offset,WORD len)"
V L "temp" 17 1067 "WORD_VAL" "Program the start address of the DMA, after adjusting for the Ethernet"
C L "MACCalcTxChecksum" 17 1046 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1046 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1046 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1046 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1046 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
C L "CalcIPBufferChecksum" 17 1098 1 "*"
V L "len" 17 1122 "WORD"
F G "CalcIPBufferChecksum" 17 1122 "WORD(WORD len)"
V L "temp" 17 1124 "WORD_VAL" "Take care of special cases which the DMA cannot be used for"
C L "CalcIPBufferChecksum" 17 1098 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1098 2 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1098 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1098 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1098 1 "FUNCTION"
C L "MACGet" 17 1098 1 "FUNCTION"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 1 "*"
C L "MACGet" 17 1182 4 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
C L "MACGet" 17 1367 1 "*"
F G "MACGet" 17 1385 "int8()" "SPISelectEthernet();"
C L "MACGet" 17 1367 9 "FUNCTION"
V L "c" 17 1400 "int8"
C L "MACGetArray" 17 1367 1 "FUNCTION"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
C L "MACGetArray" 17 1410 1 "*"
V L "val" 17 1431 "*int8"
V L "len" 17 1431 "WORD"
F G "MACGetArray" 17 1431 "WORD(*int8 val,WORD len)" "int16 i;"
C L "MACGetArray" 17 1410 14 "FUNCTION"
C L "MACGetArray" 17 1433 5 "*val"
V L "i" 17 1461 "int16"
C L "MACPut" 17 1433 1 "FUNCTION"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
C L "MACPut" 17 1477 1 "*"
V L "val" 17 1495 "int8"
F G "MACPut" 17 1495 "void(int8 val)" "SPISelectEthernet();"
C L "MACPut" 17 1477 7 "FUNCTION"
C L "MACPutArray" 17 1477 1 "FUNCTION"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
C L "MACPutArray" 17 1514 1 "*"
V L "val" 17 1533 "*int8"
V L "len" 17 1533 "WORD"
F G "MACPutArray" 17 1533 "void(*int8 val,WORD len)" "Select the chip and send the proper opcode"
C L "MACPutArray" 17 1514 14 "FUNCTION"
C L "SendSystemReset" 17 1514 1 "FUNCTION"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
C L "SendSystemReset" 17 1566 1 "*"
F G "SendSystemReset" 17 1584 "void(*int8 val,WORD len)" "SPISelectEthernet();"
C L "SendSystemReset" 17 1566 4 "FUNCTION"
C L "ReadETHReg" 17 1566 1 "FUNCTION"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
C L "ReadETHReg" 17 1599 1 "*"
V L "Address" 17 1621 "int8"
F G "ReadETHReg" 17 1621 "REG(int8 Address,WORD len)"
V L "c" 17 1623 "int8" "Select the chip and send the Read Control Register opcode/address"
C L "ReadETHReg" 17 1599 10 "FUNCTION"
C L "ReadMACReg" 17 1599 1 "FUNCTION"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
C L "ReadMACReg" 17 1648 1 "*"
V L "Address" 17 1670 "int8"
F G "ReadMACReg" 17 1670 "REG(int8 Address)"
V L "c" 17 1672 "int8" "SPISelectEthernet();"
C L "ReadMACReg" 17 1648 13 "FUNCTION"
C L "ReadPHYReg" 17 1648 1 "FUNCTION"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
C L "ReadPHYReg" 17 1706 1 "*"
V L "Register" 17 1722 "int8"
F G "ReadPHYReg" 17 1722 "PHYREG(int8 Register)"
V L "Result" 17 1724 "PHYREG" "Set the right address and start the register read operation"
C L "ReadPHYReg" 17 1706 2 "FUNCTION"
C L "ReadPHYReg" 17 1706 1 "FUNCTION"
C L "ReadPHYReg" 17 1706 1 "FUNCTION"
C L "WriteReg" 17 1706 1 "FUNCTION"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
C L "WriteReg" 17 1747 1 "*"
V L "Address" 17 1772 "int8"
V L "Data" 17 1772 "int8"
F G "WriteReg" 17 1772 "void(int8 Address,int8 Data,int8 NewConfig)" "SPISelectEthernet();"
C L "WriteReg" 17 1747 7 "FUNCTION"
C L "BFCReg" 17 1747 1 "FUNCTION"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
C L "BFCReg" 17 1791 1 "*"
V L "Address" 17 1813 "int8"
V L "Data" 17 1813 "int8"
F G "BFCReg" 17 1813 "void(int8 Address,int8 Data,int8 NewConfig)" "SPISelectEthernet();"
C L "BFCReg" 17 1791 7 "FUNCTION"
C L "BFSReg" 17 1791 1 "FUNCTION"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
C L "BFSReg" 17 1832 1 "*"
V L "Address" 17 1854 "int8"
V L "Data" 17 1854 "int8"
F G "BFSReg" 17 1854 "void(int8 Address,int8 Data,int8 NewConfig)" "SPISelectEthernet();"
C L "BFSReg" 17 1832 7 "FUNCTION"
C L "WritePHYReg" 17 1832 1 "FUNCTION"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
C L "WritePHYReg" 17 1873 1 "*"
V L "Register" 17 1890 "int8"
V L "Data" 17 1890 "WORD"
F G "WritePHYReg" 17 1890 "void(int8 Register,WORD Data,int8 NewConfig)" "Write the register address"
C L "WritePHYReg" 17 1873 2 "FUNCTION"
C L "WritePHYReg" 17 1873 1 "FUNCTION"
C L "BankSel" 17 1873 1 "FUNCTION"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
C L "BankSel" 17 1907 1 "*"
V L "Register" 17 1924 "WORD"
F G "BankSel" 17 1924 "void(WORD Register,WORD Data,int8 NewConfig)"
C L "MACSetDuplex" 17 1907 1 "FUNCTION"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 1931 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
C L "MACSetDuplex" 17 2046 1 "*"
V L "DuplexState" 17 2069 "DUPLEX"
F G "MACSetDuplex" 17 2069 "void(DUPLEX DuplexState,WORD Data,int8 NewConfig)"
V L "Register" 17 2071 "REG"
V L "PhyReg" 17 2072 "PHYREG" "Disable receive logic and abort any packets currently being transmitted"
C L "MACSetDuplex" 17 2046 1 "FUNCTION"
C L "MACSetDuplex" 17 2046 1 "FUNCTION"
C L "MACSetDuplex" 17 2046 4 "FUNCTION"
C L "MACSetDuplex" 17 2046 1 "FUNCTION"
C L "MACPowerDown" 17 2046 1 "FUNCTION"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
C L "MACPowerDown" 17 2106 1 "*"
F G "MACPowerDown" 17 2125 "void(int8 NewConfig)" "Disable packet reception"
C L "MACPowerDown" 17 2106 2 "FUNCTION"
C L "MACPowerDown" 17 2106 1 "FUNCTION"
C L "MACPowerDown" 17 2106 1 "FUNCTION"
C L "MACPowerUp" 17 2106 1 "FUNCTION"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
C L "MACPowerUp" 17 2142 1 "*"
F G "MACPowerUp" 17 2161 "void(int8 NewConfig)" "Leave power down mode"
C L "MACPowerUp" 17 2142 2 "FUNCTION"
C L "MACPowerUp" 17 2142 1 "FUNCTION"
C L "SetCLKOUT" 17 2142 1 "FUNCTION"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
C L "SetCLKOUT" 17 2175 1 "*"
V L "NewConfig" 17 2197 "int8"
F G "SetCLKOUT" 17 2197 "void(int8 NewConfig)"
C L "GetCLKOUT" 17 2175 1 "FUNCTION"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
C L "GetCLKOUT" 17 2204 1 "*"
F G "GetCLKOUT" 17 2226 "int8()"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
D G "IP_H" 21 45 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
D G "IP_PROT_ICMP" 21 50 " (1)"
D G "IP_PROT_TCP" 21 51 " (6)"
D G "IP_PROT_UDP" 21 52 " (17)"
C G "" 21 55 1 "*"
T G "IP_HEADER" 21 71 "{int8 VersionIHL,int8 TypeOfService,WORD TotalLength,WORD Identification,WORD FragmentInfo,int8 TimeToLive,int8 Protocol,WORD HeaderChecksum,IP_ADDR SourceAddress,IP_ADDR DestAddress}" "* Function:        BOOL IPIsTxReady(BOOL HighPriority)"
C G "" 21 74 1 "*"
C G "" 21 74 1 "*"
C G "" 21 74 1 "*"
C G "" 21 74 1 "*"
C G "" 21 74 1 "*"
D G "IPIsTxReady" 21 89 "(HighPriority)       MACIsTxReady(HighPriority)"
C G "" 21 92 1 "*"
C G "" 21 92 1 "*"
C G "" 21 92 1 "*"
C G "" 21 92 1 "*"
C G "" 21 92 1 "*"
C G "" 21 92 1 "*"
C G "" 21 92 1 "*"
D G "IPSetTxBuffer" 21 108 "(a, b) MACSetTxBuffer(a, b+sizeof(IP_HEADER))"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
C L "IPPutHeader" 21 112 1 "*"
V L "remote" 21 136 "*NODE_INFO"
V L "protocol" 21 137 "int8"
V L "len" 21 138 "WORD"
F G "IPPutHeader" 21 138 "WORD(*NODE_INFO remote,int8 protocol,WORD len)" "* Macro:           IPPutArray(a, b)"
C L "IPPutHeader" 21 141 1 "*"
C L "IPPutHeader" 21 141 1 "*"
C L "IPPutHeader" 21 141 1 "*"
C L "IPPutHeader" 21 141 1 "*"
C L "IPPutHeader" 21 141 1 "*"
D G "IPPutArray" 21 156 "(a, b)    MACPutArray(a, b)"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
C L "IPPutHeader" 21 161 1 "*"
V L "localIP" 21 187 "*IP_ADDR"
V L "remote" 21 188 "*NODE_INFO"
V L "protocol" 21 189 "*int8"
V L "len" 21 190 "*WORD"
F G "IPGetHeader" 21 190 "int8(*IP_ADDR localIP,*NODE_INFO remote,*int8 protocol,*WORD len)" "* Macro:           IPDiscard()"
C L "IPGetHeader" 21 193 1 "*"
C L "IPGetHeader" 21 193 1 "*"
C L "IPGetHeader" 21 193 1 "*"
C L "IPGetHeader" 21 193 1 "*"
C L "IPGetHeader" 21 193 1 "*"
D G "IPDiscard" 21 208 "()         MACDiscard()"
C L "IPGetHeader" 21 212 1 "*"
C L "IPGetHeader" 21 212 1 "*"
C L "IPGetHeader" 21 212 1 "*"
C L "IPGetHeader" 21 212 1 "*"
C L "IPGetHeader" 21 212 1 "*"
C L "IPGetHeader" 21 212 1 "*"
D G "IPGetArray" 21 227 "(a, b)    MACGetArray(a, b)"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
C L "IPGetHeader" 21 232 1 "*"
V L "Offset" 21 248 "WORD"
F G "IPSetRxBuffer" 21 248 "void(WORD Offset)" "This is left shifted by 4.  Actual value is 0x04."
D G "IPv4" 20 55 " (0x40u)"
D G "IP_VERSION" 20 56 "IPv4"
D G "debug_ip" 20 58 ""
D G "IP_IHL" 20 64 " (0x05)"
D G "IP_SERVICE_NW_CTRL" 20 66 " (0x07)"
D G "IP_SERVICE_IN_CTRL" 20 67 " (0x06)"
D G "IP_SERVICE_ECP" 20 68 " (0x05)"
D G "IP_SERVICE_OVR" 20 69 " (0x04)"
D G "IP_SERVICE_FLASH" 20 70 " (0x03)"
D G "IP_SERVICE_IMM" 20 71 " (0x02)"
D G "IP_SERVICE_PRIOR" 20 72 " (0x01)"
D G "IP_SERVICE_ROUTINE" 20 73 " (0x00)"
D G "IP_SERVICE_N_DELAY" 20 75 " (0x00)"
D G "IP_SERCICE_L_DELAY" 20 76 " (0x08)"
D G "IP_SERVICE_N_THRPT" 20 77 " (0x00)"
D G "IP_SERVICE_H_THRPT" 20 78 " (0x10)"
D G "IP_SERVICE_N_RELIB" 20 79 " (0x00)"
D G "IP_SERVICE_H_RELIB" 20 80 " (0x20)"
D G "IP_SERVICE" 20 82 " (IP_SERVICE_ROUTINE | IP_SERVICE_N_DELAY)"
D G "MY_IP_TTL" 20 84 " (100)" "Time-To-Live in Seconds"
V G "_Identifier" 20 89 "WORD"
V G "IPHeaderLen" 20 90 "int8"
V L "h" 20 92 "*IP_HEADER"
F G "SwapIPHeader" 20 92 "void(*IP_HEADER h)" "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
C L "SwapIPHeader" 20 97 1 "*"
V L "localIP" 20 123 "*IP_ADDR"
V L "remote" 20 124 "*NODE_INFO"
V L "protocol" 20 125 "*int8"
V L "len" 20 126 "*WORD"
F G "IPGetHeader" 20 126 "int8(*IP_ADDR localIP,*NODE_INFO remote,*int8 protocol,*WORD len)"
V L "CalcChecksum" 20 128 "WORD_VAL"
V L "header" 20 129 "IP_HEADER"
C L "IPGetHeader" 20 97 1 "FUNCTION"
C L "IPGetHeader" 20 97 1 "FUNCTION"
C L "IPGetHeader" 20 97 4 "FUNCTION"
C L "IPGetHeader" 20 97 1 "FUNCTION"
C L "IPGetHeader" 20 97 2 "FUNCTION"
C L "IPGetHeader" 20 97 1 "FUNCTION"
C L "IPGetHeader" 20 97 2 "FUNCTION"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
C L "IPPutHeader" 20 220 1 "*"
V L "remote" 20 238 "*NODE_INFO"
V L "protocol" 20 239 "int8"
V L "len" 20 240 "WORD"
F G "IPPutHeader" 20 240 "WORD(*NODE_INFO remote,int8 protocol,WORD len)"
V L "header" 20 242 "IP_HEADER"
C L "IPPutHeader" 20 220 1 "FUNCTION"
C L "IPPutHeader" 20 220 1 "FUNCTION"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
C L "IPSetRxBuffer" 20 278 1 "*"
V L "Offset" 20 294 "WORD"
F G "IPSetRxBuffer" 20 294 "void(WORD Offset,WORD len)"
V L "h" 20 301 "*IP_HEADER"
F G "SwapIPHeader" 20 301 "void(*IP_HEADER h,WORD len)"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
D G "TCP_H" 23 40 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
T G "TCP_SOCKET" 23 45 "int8"
T G "TCP_PORT" 23 46 "WORD" "* Maximum number of times a connection be retried before"
D G "MAX_RETRY_COUNTS" 23 56 " (3)"
D G "INVALID_SOCKET" 23 58 " (0xfe)"
D G "UNKNOWN_SOCKET" 23 59 " (0xff)"
D G "REMOTE_HOST" 23 61 "(s)      (TCB[s].remote)"
C G "" 23 63 1 "*"
E G "TCP_LISTEN" 23 69 "0"
E G "TCP_SYN_SENT" 23 70 "1"
E G "TCP_SYN_RECEIVED" 23 71 "2"
E G "TCP_ESTABLISHED" 23 72 "3"
E G "TCP_FIN_WAIT_1" 23 73 "4"
E G "TCP_FIN_WAIT_2" 23 74 "5"
E G "TCP_CLOSING" 23 75 "6"
E G "TCP_TIME_WAIT" 23 76 "7"
E G "TCP_CLOSE_WAIT" 23 77 "8"
E G "TCP_LAST_ACK" 23 78 "9"
E G "TCP_CLOSED" 23 79 "10"
T G "TCP_STATE" 23 79 "_TCP_STATE" "* Socket info."
C G "" 23 81 1 "*"
T G "SOCKET_INFO" 23 115 "{TCP_STATE smState,NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,BUFFER TxBuffer,WORD TxCount,WORD RxCount,WORD RemoteWindow,DWORD SND_SEQ,DWORD SND_ACK,int8 RetryCount,TICKTYPE startTick,TICKTYPE TimeOut}" "* Function:        void TCPInit(void)"
C L "TCPInit" 23 117 1 "*"
C L "TCPInit" 23 117 1 "*"
C L "TCPInit" 23 117 1 "*"
C L "TCPInit" 23 117 1 "*"
C L "TCPInit" 23 117 1 "*"
C L "TCPInit" 23 117 1 "*"
C L "TCPInit" 23 117 1 "*"
F G "TCPInit" 23 133 "void()" "* Function:        TCP_SOCKET TCPListen(TCP_PORT port)"
C L "TCPInit" 23 137 1 "*"
C L "TCPInit" 23 137 1 "*"
C L "TCPInit" 23 137 1 "*"
C L "TCPInit" 23 137 1 "*"
C L "TCPInit" 23 137 1 "*"
C L "TCPInit" 23 137 1 "*"
C L "TCPInit" 23 137 1 "*"
V L "port" 23 153 "TCP_PORT"
F G "TCPListen" 23 153 "TCP_SOCKET(TCP_PORT port)" "* Function:        TCP_SOCKET TCPConnect(NODE_INFO* remote,"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
C L "TCPListen" 23 157 1 "*"
V L "remote" 23 174 "*NODE_INFO"
V L "port" 23 174 "TCP_PORT"
F G "TCPConnect" 23 174 "TCP_SOCKET(*NODE_INFO remote,TCP_PORT port)" "* Function:        BOOL TCPIsConnected(TCP_SOCKET s)"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
C L "TCPConnect" 23 177 1 "*"
V L "s" 23 196 "TCP_SOCKET"
F G "TCPIsConnected" 23 196 "int8(TCP_SOCKET s)" "* Function:        void TCPDisconnect(TCP_SOCKET s)"
C L "TCPIsConnected" 23 199 1 "*"
C L "TCPIsConnected" 23 199 1 "*"
C L "TCPIsConnected" 23 199 1 "*"
C L "TCPIsConnected" 23 199 1 "*"
C L "TCPIsConnected" 23 199 1 "*"
C L "TCPIsConnected" 23 199 1 "*"
C L "TCPIsConnected" 23 199 1 "*"
V L "s" 23 215 "TCP_SOCKET"
F G "TCPDisconnect" 23 215 "void(TCP_SOCKET s)" "* Function:        BOOL TCPIsPutReady(TCP_SOCKET s)"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
C L "TCPDisconnect" 23 218 1 "*"
V L "s" 23 240 "TCP_SOCKET"
F G "TCPIsPutReady" 23 240 "int8(TCP_SOCKET s)" "* Function:        BOOL TCPPut(TCP_SOCKET s, BYTE byte)"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
C L "TCPIsPutReady" 23 243 1 "*"
V L "socket" 23 260 "TCP_SOCKET"
V L "data" 23 260 "int8"
F G "TCPPut" 23 260 "int8(TCP_SOCKET socket,int8 data)" "* Function:        BOOL TCPFlush(TCP_SOCKET s)"
C L "TCPPut" 23 263 1 "*"
C L "TCPPut" 23 263 1 "*"
C L "TCPPut" 23 263 1 "*"
C L "TCPPut" 23 263 1 "*"
C L "TCPPut" 23 263 1 "*"
C L "TCPPut" 23 263 1 "*"
C L "TCPPut" 23 263 1 "*"
V L "socket" 23 279 "TCP_SOCKET"
F G "TCPFlush" 23 279 "int8(TCP_SOCKET socket)" "* Function:        BOOL TCPIsGetReady(TCP_SOCKET s)"
C L "TCPFlush" 23 281 1 "*"
C L "TCPFlush" 23 281 1 "*"
C L "TCPFlush" 23 281 1 "*"
C L "TCPFlush" 23 281 1 "*"
C L "TCPFlush" 23 281 1 "*"
C L "TCPFlush" 23 281 1 "*"
C L "TCPFlush" 23 281 1 "*"
V L "s" 23 297 "TCP_SOCKET"
F G "TCPIsGetReady" 23 297 "int8(TCP_SOCKET s)" "* Function:        BOOL TCPGet(TCP_SOCKET s, BYTE *byte)"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
C L "TCPIsGetReady" 23 300 1 "*"
V L "socket" 23 318 "TCP_SOCKET"
V L "data" 23 318 "*int8"
F G "TCPGet" 23 318 "int8(TCP_SOCKET socket,*int8 data)" "* Function:        WORD TCPGetArray(TCP_SOCKET s, BYTE *buffer,"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
C L "TCPGet" 23 321 1 "*"
V L "s" 23 340 "TCP_SOCKET"
V L "buff" 23 340 "*int8"
V L "count" 23 340 "WORD"
F G "TCPGetArray" 23 340 "WORD(TCP_SOCKET s,*int8 buff,WORD count)" "* Function:        BOOL TCPDiscard(TCP_SOCKET s)"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
C L "TCPGetArray" 23 343 1 "*"
V L "socket" 23 360 "TCP_SOCKET"
F G "TCPDiscard" 23 360 "int8(TCP_SOCKET socket)" "* Function:        BOOL TCPProcess(NODE_INFO* remote,"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
C L "TCPDiscard" 23 363 1 "*"
V L "remote" 23 383 "*NODE_INFO"
V L "localIP" 23 384 "*IP_ADDR"
V L "len" 23 385 "WORD"
F G "TCPProcess" 23 385 "int8(*NODE_INFO remote,*IP_ADDR localIP,WORD len)" "* Function:        void TCPTick(void)"
C L "TCPProcess" 23 388 1 "*"
C L "TCPProcess" 23 388 1 "*"
C L "TCPProcess" 23 388 1 "*"
C L "TCPProcess" 23 388 1 "*"
C L "TCPProcess" 23 388 1 "*"
C L "TCPProcess" 23 388 1 "*"
C L "TCPProcess" 23 388 1 "*"
F G "TCPTick" 23 404 "void()" "*                  MAC Module Defs for Microchip Stack"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
D G "debug_tcp" 22 81 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "MAX_TCP_DATA_LEN" 22 86 " (MAC_TX_BUFFER_SIZE - 54)"
D G "TCP_START_TIMEOUT_VAL" 22 89 " (TICKS_PER_SECOND * (TICKTYPE)3)"
D G "FIN" 22 92 " (0x01)"
D G "SYN" 22 93 " (0x02)"
D G "RST" 22 94 " (0x04)"
D G "PSH" 22 95 " (0x08)"
D G "ACK" 22 96 " (0x10)"
D G "URG" 22 97 " (0x20)"
C L "TCPTick" 22 82 1 "FUNCTION"
T G "TCP_HEADER" 22 133 "{WORD SourcePort,WORD DestPort,DWORD SeqNumber,DWORD AckNumber}" "TCP Options as defined by RFC"
D G "TCP_OPTIONS_END_OF_LIST" 22 137 " (0x00)"
D G "TCP_OPTIONS_NO_OP" 22 138 " (0x01)"
D G "TCP_OPTIONS_MAX_SEG_SIZE" 22 139 " (0x02)"
T G "TCP_OPTIONS" 22 145 "{int8 Kind,int8 Length,WORD_VAL MaxSegSize}"
D G "SwapPseudoTCPHeader" 22 147 "(h)  (h.TCPLength = swaps(h.TCPLength))"
C L "TCPTick" 22 82 1 "FUNCTION"
T G "PSEUDO_HEADER" 22 157 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD TCPLength}"
D G "LOCAL_PORT_START_NUMBER" 22 159 " (1024)"
D G "LOCAL_PORT_END_NUMBER" 22 160 " (5000)"
C L "TCPTick" 22 82 1 "FUNCTION"
V G "_NextPort" 22 163 "WORD"
C L "TCPTick" 22 82 12 "FUNCTION"
V G "TCB" 22 180 "SOCKET_INFO[5]" "#pragma udata bla   // Return to any other RAM section   //not needed in ccs"
V L "s" 22 183 "TCP_SOCKET"
V L "remote" 22 184 "*NODE_INFO"
V L "h" 22 185 "*TCP_HEADER"
V L "len" 22 186 "WORD"
F G "HandleTCPSeg" 22 186 "void(TCP_SOCKET s,*NODE_INFO remote,*TCP_HEADER h,WORD len)"
V L "remote" 22 188 "*NODE_INFO"
V L "localPort" 22 189 "TCP_PORT"
V L "remotePort" 22 190 "TCP_PORT"
V L "tseq" 22 191 "DWORD"
V L "tack" 22 192 "DWORD"
V L "flags" 22 193 "int8"
V L "buff" 22 194 "BUFFER"
V L "len" 22 195 "WORD"
F G "TransmitTCP" 22 195 "void(*NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,DWORD tseq,DWORD tack,int8 flags,BUFFER buff,WORD len)"
V L "h" 22 197 "*TCP_HEADER"
V L "remote" 22 198 "*NODE_INFO"
F G "FindMatching_TCP_Socket" 22 198 "TCP_SOCKET(*TCP_HEADER h,*NODE_INFO remote)"
V L "header" 22 199 "*TCP_HEADER"
F G "SwapTCPHeader" 22 199 "void(*TCP_HEADER header)"
V L "ps" 22 200 "*SOCKET_INFO"
F G "CloseSocket" 22 200 "void(*SOCKET_INFO ps)"
D G "SendTCP" 22 202 "(remote, localPort, remotePort, seq, ack, flags)              TransmitTCP(remote, localPort, remotePort, seq, ack, flags,                      INVALID_BUFFER, 0)"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
C L "CloseSocket" 22 208 1 "*"
V G "TCPInit_RandSeed" 22 224 "int16"
F G "TCPInit" 22 225 "void()"
V L "s" 22 227 "TCP_SOCKET"
V L "ps" 22 228 "*SOCKET_INFO" "Initialize all sockets."
C L "TCPInit" 22 208 1 "FUNCTION"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
C L "TCPListen" 22 279 1 "*"
V L "port" 22 295 "TCP_PORT"
F G "TCPListen" 22 295 "TCP_SOCKET(TCP_PORT port)"
V L "s" 22 297 "TCP_SOCKET"
V L "ps" 22 298 "*SOCKET_INFO"
C L "TCPListen" 22 279 2 "FUNCTION"
C L "TCPListen" 22 279 1 "FUNCTION"
C L "TCPListen" 22 279 1 "FUNCTION"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
C L "TCPConnect" 22 341 1 "*"
V L "remote" 22 358 "*NODE_INFO"
V L "remotePort" 22 358 "TCP_PORT"
F G "TCPConnect" 22 358 "TCP_SOCKET(*NODE_INFO remote,TCP_PORT remotePort)"
V L "s" 22 360 "TCP_SOCKET"
V L "ps" 22 361 "*SOCKET_INFO"
V L "lbFound" 22 362 "BOOL"
C L "TCPConnect" 22 341 1 "FUNCTION"
C L "TCPConnect" 22 341 1 "FUNCTION"
C L "TCPConnect" 22 341 2 "FUNCTION"
C L "TCPConnect" 22 341 1 "FUNCTION"
C L "TCPConnect" 22 341 1 "FUNCTION"
C L "TCPConnect" 22 341 2 "FUNCTION"
C L "TCPConnect" 22 341 1 "FUNCTION"
C L "TCPConnect" 22 341 1 "FUNCTION"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
C L "TCPIsConnected" 22 424 1 "*"
V L "s" 22 443 "TCP_SOCKET"
F G "TCPIsConnected" 22 443 "int8(TCP_SOCKET s)"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
C L "TCPDisconnect" 22 450 1 "*"
V L "s" 22 466 "TCP_SOCKET"
F G "TCPDisconnect" 22 466 "void(TCP_SOCKET s)"
V L "ps" 22 468 "*SOCKET_INFO"
C L "TCPDisconnect" 22 450 3 "FUNCTION"
C L "TCPDisconnect" 22 450 1 "FUNCTION"
C L "TCPDisconnect" 22 450 1 "FUNCTION"
C L "TCPDisconnect" 22 450 1 "FUNCTION"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
C L "TCPFlush" 22 500 1 "*"
V L "s" 22 516 "TCP_SOCKET"
F G "TCPFlush" 22 516 "int8(TCP_SOCKET s,TCP_SOCKET s)"
V L "ps" 22 518 "*SOCKET_INFO"
C L "TCPFlush" 22 500 1 "FUNCTION"
C L "TCPFlush" 22 500 1 "FUNCTION"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
C L "TCPIsPutReady" 22 556 1 "*"
V L "s" 22 578 "TCP_SOCKET"
F G "TCPIsPutReady" 22 578 "int8(TCP_SOCKET s)"
V L "s" 22 590 "TCP_SOCKET"
F G "TCPPutAvailable" 22 590 "int16(TCP_SOCKET s)"
V L "txCount" 22 592 "int16"
V L "txAvail" 22 592 "int16"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
C L "TCPPutArray" 22 609 1 "*"
V L "s" 22 629 "TCP_SOCKET"
V L "ptr" 22 629 "*int8"
V L "len" 22 629 "WORD"
F G "TCPPutArray" 22 629 "WORD(TCP_SOCKET s,*int8 ptr,WORD len)"
V L "ps" 22 631 "*SOCKET_INFO"
V L "n" 22 632 "WORD"
C L "TCPPutArray" 22 609 1 "FUNCTION"
C L "TCPPutArray" 22 609 1 "FUNCTION"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
C L "TCPPut" 22 674 1 "*"
V L "s" 22 693 "TCP_SOCKET"
V L "byte" 22 693 "int8"
F G "TCPPut" 22 693 "int8(TCP_SOCKET s,int8 byte)"
V L "ps" 22 695 "*SOCKET_INFO"
V L "tempCount" 22 696 "WORD"
C L "TCPPut" 22 674 1 "FUNCTION"
C L "TCPPut" 22 674 1 "FUNCTION"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
C L "TCPDiscard" 22 732 1 "*"
V L "s" 22 749 "TCP_SOCKET"
F G "TCPDiscard" 22 749 "int8(TCP_SOCKET s)"
V L "ps" 22 751 "*SOCKET_INFO"
C L "TCPDiscard" 22 732 1 "FUNCTION"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
C L "TCPGetArray" 22 768 1 "*"
V L "s" 22 787 "TCP_SOCKET"
V L "buff" 22 787 "*int8"
V L "count" 22 787 "WORD"
F G "TCPGetArray" 22 787 "WORD(TCP_SOCKET s,*int8 buff,WORD count)"
V L "ps" 22 789 "*SOCKET_INFO"
C L "TCPGetArray" 22 768 1 "FUNCTION"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
C L "TCPGet" 22 813 1 "*"
V L "s" 22 831 "TCP_SOCKET"
V L "data" 22 831 "*int8"
F G "TCPGet" 22 831 "int8(TCP_SOCKET s,*int8 data)"
V L "ps" 22 833 "*SOCKET_INFO"
C L "TCPGet" 22 813 2 "FUNCTION"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
C L "TCPIsGetReady" 22 864 1 "*"
V L "s" 22 880 "TCP_SOCKET"
F G "TCPIsGetReady" 22 880 "int8(TCP_SOCKET s)" "* A socket is said to be "Get" ready when it has already"
C L "TCPIsGetReady" 22 882 1 "*"
C L "TCPIsGetReady" 22 882 1 "*"
C L "TCPIsGetReady" 22 882 1 "*"
C L "TCPIsGetReady" 22 882 1 "*"
C L "DebugTCPDisplayState" 22 882 1 "FUNCTION"
V L "st" 22 894 "TCP_STATE"
F G "DebugTCPDisplayState" 22 894 "void(TCP_STATE st)"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
C L "TCPTick" 22 913 1 "*"
F G "TCPTick" 22 929 "void()"
V L "s" 22 931 "TCP_SOCKET"
V L "diffTicks" 22 932 "TICKTYPE"
V L "tick" 22 933 "TICKTYPE"
V L "ps" 22 934 "*SOCKET_INFO"
V L "seq" 22 935 "DWORD"
V L "flags" 22 936 "int8" "BYTE debugLastState;"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 2 "FUNCTION"
C L "TCPTick" 22 913 3 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 2 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 2 "FUNCTION"
C L "TCPTick" 22 913 4 "FUNCTION"
C L "TCPTick" 22 913 3 "FUNCTION"
C L "TCPTick" 22 913 3 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 2 "FUNCTION"
C L "TCPTick" 22 913 2 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 1 "FUNCTION"
C L "TCPTick" 22 913 6 "FUNCTION"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
C L "TCPProcess" 22 1127 1 "*"
V L "remote" 22 1147 "*NODE_INFO"
V L "localIP" 22 1147 "*IP_ADDR"
V L "len" 22 1147 "WORD"
F G "TCPProcess" 22 1147 "int8(*NODE_INFO remote,*IP_ADDR localIP,WORD len)"
V L "TCPHeader" 22 1149 "TCP_HEADER"
V L "pseudoHeader" 22 1150 "PSEUDO_HEADER"
V L "socket" 22 1151 "TCP_SOCKET"
V L "checksum1" 22 1152 "WORD_VAL"
V L "checksum2" 22 1153 "WORD_VAL"
V L "optionsSize" 22 1154 "int8" "Calculate IP pseudoheader checksum."
C L "TCPProcess" 22 1127 2 "FUNCTION"
C L "TCPProcess" 22 1127 1 "FUNCTION"
C L "TCPProcess" 22 1127 1 "FUNCTION"
C L "TCPProcess" 22 1127 1 "FUNCTION"
C L "TCPProcess" 22 1127 1 "FUNCTION"
C L "TCPProcess" 22 1127 1 "FUNCTION"
C L "TCPProcess" 22 1127 3 "FUNCTION"
C L "TCPProcess" 22 1127 12 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
C L "TransmitTCP" 22 1225 1 "*"
V L "remote" 22 1256 "*NODE_INFO"
V L "localPort" 22 1257 "TCP_PORT"
V L "remotePort" 22 1258 "TCP_PORT"
V L "tseq" 22 1259 "DWORD"
V L "tack" 22 1260 "DWORD"
V L "flags" 22 1261 "int8"
V L "buff" 22 1262 "BUFFER"
V L "len" 22 1263 "WORD"
F G "TransmitTCP" 22 1263 "void(*NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,DWORD tseq,DWORD tack,int8 flags,BUFFER buff,WORD len)"
V L "checkSum" 22 1265 "WORD_VAL"
V L "header" 22 1266 "TCP_HEADER"
V L "options" 22 1267 "TCP_OPTIONS"
V L "pseudoHeader" 22 1268 "PSEUDO_HEADER" "Make sure that this Tx buffer isn't currently being transmitted"
C L "TransmitTCP" 22 1225 4 "FUNCTION"
C L "TransmitTCP" 22 1225 2 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 1 "FUNCTION"
C L "TransmitTCP" 22 1225 5 "FUNCTION"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
C L "FindMatching_TCP_Socket" 22 1393 1 "*"
V L "h" 22 1413 "*TCP_HEADER"
V L "remote" 22 1413 "*NODE_INFO"
F G "FindMatching_TCP_Socket" 22 1413 "TCP_SOCKET(*TCP_HEADER h,*NODE_INFO remote,BUFFER buff,WORD len)"
V L "ps" 22 1415 "*SOCKET_INFO"
V L "s" 22 1416 "TCP_SOCKET"
V L "partialMatch" 22 1417 "TCP_SOCKET"
C L "FindMatching_TCP_Socket" 22 1393 1 "FUNCTION"
C L "FindMatching_TCP_Socket" 22 1393 2 "FUNCTION"
C L "SwapTCPHeader" 22 1462 1 "*"
C L "SwapTCPHeader" 22 1462 1 "*"
C L "SwapTCPHeader" 22 1462 1 "*"
C L "SwapTCPHeader" 22 1462 1 "*"
C L "SwapTCPHeader" 22 1462 1 "*"
C L "SwapTCPHeader" 22 1462 1 "*"
C L "SwapTCPHeader" 22 1462 1 "*"
V L "header" 22 1477 "*TCP_HEADER"
F G "SwapTCPHeader" 22 1477 "void(*TCP_HEADER header)"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
C L "CloseSocket" 22 1490 1 "*"
V L "ps" 22 1507 "*SOCKET_INFO"
F G "CloseSocket" 22 1507 "void(*SOCKET_INFO ps)"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
C L "HandleTCPSeg" 22 1545 1 "*"
V L "s" 22 1568 "TCP_SOCKET"
V L "remote" 22 1569 "*NODE_INFO"
V L "h" 22 1570 "*TCP_HEADER"
V L "len" 22 1571 "WORD"
F G "HandleTCPSeg" 22 1571 "void(TCP_SOCKET s,*NODE_INFO remote,*TCP_HEADER h,WORD len)"
V L "ack" 22 1573 "DWORD"
V L "seq" 22 1574 "DWORD"
V L "prevAck" 22 1575 "DWORD"
V L "prevSeq" 22 1575 "DWORD"
V L "ps" 22 1576 "*SOCKET_INFO"
V L "flags" 22 1577 "int8" "BYTE debugLastState;"
V L "temp" 22 1579 "sint32"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 5 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 3 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 3 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 3 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 3 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 4 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 6 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 2 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 1 "FUNCTION"
C L "HandleTCPSeg" 22 1545 7 "FUNCTION"
C L "HandleTCPSeg" 22 1545 6 "FUNCTION"
C L "HandleTCPSeg" 22 1545 6 "FUNCTION"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
D G "ICMP_H" 25 46 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "MAX_ICMP_DATA" 25 54 " (64)"
D G "MAX_ICMP_DATA_LEN" 25 56 " (MAX_ICMP_DATA)"
E G "ICMP_ECHO_REPLY" 25 62 "0"
E G "ICMP_ECHO_REQUEST" 25 63 "8"
T G "ICMP_CODE" 25 63 "_ICMP_CODE"
T G "ICMP_REQUESTS" 25 63 "_ICMP_CODE" "* Function:        BOOL ICMPIsTxReady()"
C G "" 25 66 1 "*"
C G "" 25 66 1 "*"
C G "" 25 66 1 "*"
C G "" 25 66 1 "*"
C G "" 25 66 1 "*"
D G "ICMPIsTxReady" 25 81 "()     MACIsTxReady(TRUE)"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
C L "ICMPPut" 25 84 1 "*"
V L "remote" 25 108 "*NODE_INFO"
V L "code" 25 109 "ICMP_CODE"
V L "data" 25 110 "*int8"
V L "len" 25 111 "int8"
V L "id" 25 112 "WORD"
V L "seq" 25 113 "WORD"
F G "ICMPPut" 25 113 "void(*NODE_INFO remote,ICMP_CODE code,*int8 data,int8 len,WORD id,WORD seq)" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
C L "ICMPPut" 25 116 1 "*"
V L "code" 25 140 "*ICMP_CODE"
V L "data" 25 141 "*int8"
V L "len" 25 142 "*int8"
V L "id" 25 143 "*WORD"
V L "seq" 25 144 "*WORD"
F G "ICMPGet" 25 144 "int8(*ICMP_CODE code,*int8 data,*int8 len,*WORD id,*WORD seq)" "*                  IP Defs for Microchip TCP/IP Stack"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
C L "ICMPGet" 21 1 1 "*"
D G "debug_icmp" 24 59 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
C L "ICMPGet" 24 57 1 "FUNCTION"
C L "ICMPGet" 24 63 1 "*"
T G "ICMP_PACKET" 24 74 "{int8 Type,int8 Code,WORD Checksum,WORD Identifier,WORD SequenceNumber,int8[64] Data}"
D G "ICMP_HEADER_SIZE" 24 75 " (sizeof(ICMP_PACKET) - MAX_ICMP_DATA)"
V L "p" 24 77 "*ICMP_PACKET"
F G "SwapICMPPacket" 24 77 "void(*ICMP_PACKET p)" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
C L "SwapICMPPacket" 24 80 1 "*"
V L "code" 24 104 "*ICMP_CODE"
V L "data" 24 105 "*int8"
V L "len" 24 106 "*int8"
V L "id" 24 107 "*WORD"
V L "seq" 24 108 "*WORD"
F G "ICMPGet" 24 108 "int8(*ICMP_CODE code,*int8 data,*int8 len,*WORD id,*WORD seq)"
V L "packet" 24 110 "ICMP_PACKET"
V L "CalcChecksum" 24 111 "WORD"
V L "ReceivedChecksum" 24 112 "WORD"
C L "ICMPGet" 24 80 1 "FUNCTION"
C L "ICMPGet" 24 80 4 "FUNCTION"
C L "ICMPGet" 24 80 1 "FUNCTION"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
C L "ICMPPut" 24 159 1 "*"
V L "remote" 24 183 "*NODE_INFO"
V L "code" 24 184 "ICMP_CODE"
V L "data" 24 185 "*int8"
V L "len" 24 186 "int8"
V L "id" 24 187 "WORD"
V L "seq" 24 188 "WORD"
F G "ICMPPut" 24 188 "void(*NODE_INFO remote,ICMP_CODE code,*int8 data,int8 len,WORD id,WORD seq,*NODE_INFO remote,int8 opCode)"
V L "packet" 24 190 "ICMP_PACKET"
V L "ICMPLen" 24 191 "WORD"
V L "MyTxBuffer" 24 192 "BUFFER"
C L "ICMPPut" 24 159 2 "FUNCTION"
C L "ICMPPut" 24 159 1 "FUNCTION"
C L "SwapICMPPacket" 24 237 1 "*"
C L "SwapICMPPacket" 24 237 1 "*"
C L "SwapICMPPacket" 24 237 1 "*"
C L "SwapICMPPacket" 24 237 1 "*"
C L "SwapICMPPacket" 24 237 1 "*"
C L "SwapICMPPacket" 24 237 1 "*"
C L "SwapICMPPacket" 24 237 1 "*"
V L "p" 24 252 "*ICMP_PACKET"
F G "SwapICMPPacket" 24 252 "void(*ICMP_PACKET p,WORD id,WORD seq,*NODE_INFO remote,int8 opCode)"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
D G "ARP_H" 27 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "ARP_REPLY" 27 52 " (0x00)"
D G "ARP_REQUEST" 27 53 " (0x01)"
D G "ARP_UNKNOWN" 27 54 " (0x02)"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
C L "ARPGet" 27 57 1 "*"
V L "remote" 27 74 "*NODE_INFO"
V L "opCode" 27 74 "*int8"
F G "ARPGet" 27 74 "int8(*NODE_INFO remote,*int8 opCode,WORD seq,*NODE_INFO remote,int8 opCode)" "* Macro:           ARPIsRxReady()"
C L "ARPGet" 27 77 1 "*"
C L "ARPGet" 27 77 1 "*"
C L "ARPGet" 27 77 1 "*"
C L "ARPGet" 27 77 1 "*"
C L "ARPGet" 27 77 1 "*"
C L "ARPGet" 27 77 1 "*"
D G "ARPIsTxReady" 27 93 "()      MACIsTxReady(TRUE)"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
C L "ARPGet" 27 97 1 "*"
V L "remote" 27 113 "*NODE_INFO"
V L "opCode" 27 113 "int8"
F G "ARPPut" 27 113 "int8(*NODE_INFO remote,int8 opCode)" "*                  ARP Server Defs for Microchip TCP/IP Stack"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
C L "ARPPut" 28 1 1 "*"
D G "ARP_TSK_H" 28 45 ""
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 2 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 28 51 1 "*"
C L "ARPPut" 28 51 1 "*"
C L "ARPPut" 28 51 1 "*"
C L "ARPPut" 28 51 1 "*"
C L "ARPPut" 28 51 1 "*"
C L "ARPPut" 28 51 1 "*"
C L "ARPPut" 28 51 1 "*"
F G "ARPInit" 28 66 "void()" "* Function:        BOOL ARPProcess(void)"
C L "ARPInit" 28 69 1 "*"
C L "ARPInit" 28 69 1 "*"
C L "ARPInit" 28 69 1 "*"
C L "ARPInit" 28 69 1 "*"
C L "ARPInit" 28 69 1 "*"
C L "ARPInit" 28 69 1 "*"
F G "ARPProcess" 28 84 "int8()" "* Function:        void ARPResolve(IP_ADDR* IPAddr)"
C L "ARPProcess" 28 87 1 "*"
C L "ARPProcess" 28 87 1 "*"
C L "ARPProcess" 28 87 1 "*"
C L "ARPProcess" 28 87 1 "*"
C L "ARPProcess" 28 87 1 "*"
C L "ARPProcess" 28 87 1 "*"
V L "IPAddr" 28 102 "*IP_ADDR"
F G "ARPResolve" 28 102 "void(*IP_ADDR IPAddr)" "* Function:        BOOL ARPIsResolved(IP_ADDR* IPAddr,"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
C L "ARPResolve" 28 105 1 "*"
V L "IPAddr" 28 123 "*IP_ADDR"
V L "MACAddr" 28 123 "*MAC_ADDR"
F G "ARPIsResolved" 28 123 "int8(*IP_ADDR IPAddr,*MAC_ADDR MACAddr)"
D G "debug_arptask" 26 56 ""
C L "ARPIsResolved" 26 57 1 "FUNCTION"
C L "ARPIsResolved" 26 59 1 "*"
E G "SM_ARP_IDLE" 26 65 "0"
E G "SM_ARP_REPLY" 26 66 "1"
T G "ARP_STATE" 26 66 "_ARP_STATE" "* This ARP task caches one ARP response."
V G "smARP" 26 72 "ARP_STATE"
V G "Cache" 26 74 "NODE_INFO" "* Function:        void ARPInit(void)"
C L "ARPIsResolved" 26 77 1 "*"
C L "ARPIsResolved" 26 77 1 "*"
C L "ARPIsResolved" 26 77 1 "*"
C L "ARPIsResolved" 26 77 1 "*"
C L "ARPIsResolved" 26 77 1 "*"
C L "ARPIsResolved" 26 77 1 "*"
F G "ARPInit" 26 92 "void()"
C L "ARPProcess" 26 108 1 "*"
C L "ARPProcess" 26 108 1 "*"
C L "ARPProcess" 26 108 1 "*"
C L "ARPProcess" 26 108 1 "*"
C L "ARPProcess" 26 108 1 "*"
C L "ARPProcess" 26 108 1 "*"
C L "ARPProcess" 26 108 1 "*"
F G "ARPProcess" 26 123 "int8()"
V L "remoteNode" 26 125 "NODE_INFO"
V L "opCode" 26 126 "int8"
C L "ARPProcess" 26 108 2 "FUNCTION"
C L "ARPResolve" 26 160 1 "*"
C L "ARPResolve" 26 160 1 "*"
C L "ARPResolve" 26 160 1 "*"
C L "ARPResolve" 26 160 1 "*"
C L "ARPResolve" 26 160 1 "*"
C L "ARPResolve" 26 160 1 "*"
V L "IPAddr" 26 173 "*IP_ADDR"
F G "ARPResolve" 26 173 "void(*IP_ADDR IPAddr)"
V L "remoteNode" 26 175 "NODE_INFO"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
C L "ARPIsResolved" 26 184 1 "*"
V L "IPAddr" 26 202 "*IP_ADDR"
V L "MACAddr" 26 202 "*MAC_ADDR"
F G "ARPIsResolved" 26 202 "int8(*IP_ADDR IPAddr,*MAC_ADDR MACAddr)"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "debug_arp" 29 55 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "ARP_OPERATION_REQ" 29 58 "0x01u"
D G "ARP_OPERATION_RESP" 29 59 "0x02u"
D G "HW_ETHERNET" 29 62 " (0x0001u)"
D G "ARP_IP" 29 63 " (0x0800u)"
T G "ARP_PACKET" 29 79 "{WORD HardwareType,WORD Protocol,int8 MACAddrLen,int8 ProtocolLen,WORD Operation,MAC_ADDR SenderMACAddr,IP_ADDR SenderIPAddr,MAC_ADDR TargetMACAddr,IP_ADDR TargetIPAddr}" "Helper function"
V L "p" 29 82 "*ARP_PACKET"
F G "SwapARPPacket" 29 82 "void(*ARP_PACKET p)" "* Function:        BOOL ARPGet(NODE_INFO* remote, BYTE* opCode)"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
C L "SwapARPPacket" 29 85 1 "*"
V L "remote" 29 102 "*NODE_INFO"
V L "opCode" 29 102 "*int8"
F G "ARPGet" 29 102 "int8(*NODE_INFO remote,*int8 opCode)"
V L "packet" 29 104 "ARP_PACKET" "MACGetArray((int8*)&packet, sizeof(packet));"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
C L "ARPPut" 29 145 1 "*"
V L "remote" 29 162 "*NODE_INFO"
V L "opCode" 29 162 "int8"
F G "ARPPut" 29 162 "int8(*NODE_INFO remote,int8 opCode)"
V L "packet" 29 164 "ARP_PACKET"
V L "MyTxBuffer" 29 166 "BUFFER"
C L "ARPPut" 29 145 1 "FUNCTION"
C L "ARPPut" 29 145 2 "FUNCTION"
C L "ARPPut" 29 145 1 "FUNCTION"
C L "SwapARPPacket" 29 223 1 "*"
C L "SwapARPPacket" 29 223 1 "*"
C L "SwapARPPacket" 29 223 1 "*"
C L "SwapARPPacket" 29 223 1 "*"
C L "SwapARPPacket" 29 223 1 "*"
C L "SwapARPPacket" 29 223 1 "*"
C L "SwapARPPacket" 29 223 1 "*"
V L "p" 29 238 "*ARP_PACKET"
F G "SwapARPPacket" 29 238 "void(*ARP_PACKET p)"
C G "" 2 221 1 "*"
E G "SM_STACK_IDLE" 2 227 "0"
E G "SM_STACK_MAC" 2 228 "1"
E G "SM_STACK_IP" 2 229 "2"
E G "SM_STACK_ICMP" 2 230 "3"
E G "SM_STACK_ICMP_REPLY" 2 231 "4"
E G "SM_STACK_ARP" 2 232 "5"
E G "SM_STACK_TCP" 2 233 "6"
E G "SM_STACK_UDP" 2 234 "7"
T G "SM_STACK" 2 234 "_SM_STACK"
V G "smStack" 2 236 "SM_STACK"
V G "remoteNode" 2 238 "NODE_INFO" "* Function:        void StackInit(void)"
C L "StackInit" 2 241 1 "*"
C L "StackInit" 2 241 1 "*"
C L "StackInit" 2 241 1 "*"
C L "StackInit" 2 241 1 "*"
C L "StackInit" 2 241 1 "*"
C L "StackInit" 2 241 1 "*"
F G "StackInit" 2 256 "void()"
D G "DebugDisplayVals" 2 327 "()"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
C L "StackTask" 2 329 1 "*"
F G "StackTask" 2 348 "void()"
V L "dataCount" 2 350 "WORD"
V L "data" 2 353 "int8[64]"
V L "ICMPId" 2 354 "WORD"
V L "ICMPSeq" 2 355 "WORD"
V L "tempLocalIP" 2 357 "IP_ADDR"
V L "type" 2 367 "{int8 MACFrameType,int8 IPFrameType,ICMP_CODE ICMPCode}"
V L "lbContinue" 2 370 "BOOL"
C L "StackTask" 2 329 1 "FUNCTION"
C L "StackTask" 2 329 1 "FUNCTION"
D G "MY_HTTP_SOCKET" 0 42 "80"
V G "HTTPSocket" 0 44 "int8"
C L "MACAddrInit" 0 46 1 "FUNCTION"
F G "MACAddrInit" 0 47 "void()"
F G "IPAddrInit" 0 57 "void()" "Direccion IP"
C L "IPAddrInit" 0 46 1 "FUNCTION"
C L "IPAddrInit" 0 46 1 "FUNCTION"
V L "c" 0 78 "int8"
F G "HTTPPut" 0 78 "void(int8 c)"
F G "HTTPTask" 0 83 "void()"
V L "HTTP_ST_CONNECT" 0 85 "0"
V L "HTTP_ST_WAIT_CONNECT" 0 85 "1"
V L "HTTP_ST_GET" 0 85 "2"
V L "HTTP_ST_PUT" 0 85 "3"
V L "HTTP_ST_DISCONNECT" 0 85 "4"
V L "state" 0 85 ""
V L "timeout_counter" 0 86 "TICKTYPE"
V L "lc" 0 87 "int8"
V L "lc2" 0 87 "int8"
V L "c" 0 88 "int8"
V L "content" 0 89 "int8[250]"
C L "HTTPTask" 0 46 1 "FUNCTION"
C L "HTTPTask" 0 46 1 "FUNCTION"
C L "HTTPTask" 0 46 1 "FUNCTION"
C L "HTTPTask" 0 46 1 "FUNCTION"
C L "HTTPTask" 0 46 1 "FUNCTION"
C L "HTTPTask" 0 46 1 "FUNCTION"
C L "HTTPTask" 0 46 1 "FUNCTION"
F G "main" 0 156 "void()"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
